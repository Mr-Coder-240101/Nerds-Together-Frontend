{"version":3,"sources":["actions/types.js","reducers/alert.js","reducers/authentication.js","reducers/profile.js","reducers/path.js","reducers/post.js","reducers/root.js","store.js","actions/alert.js","actions/profile.js","actions/post.js","actions/authentication.js","components/layout/Alert.js","components/authentication/SignIn.js","components/authentication/SignUp.js","components/authentication/ForgotPassword.js","components/authentication/ResetPassword.js","img/loading.gif","components/layout/Loading.js","components/posts/AllPosts.js","components/layout/Landing.js","components/layout/Navbar.js","components/dashboard/Experience.js","components/dashboard/Education.js","components/dashboard/Dashboard.js","components/dashboard/CreateProfile.js","components/dashboard/EditProfile.js","components/dashboard/AddExperience.js","components/dashboard/AddEducation.js","components/profile/UserProfiles.js","components/profile/Nerds.js","components/profile/ProfileTop.js","components/profile/ProfileAbout.js","components/profile/ProfileExperience.js","components/profile/ProfileEducation.js","components/profile/MyProfile.js","components/profile/ProfileTopOther.js","components/profile/OtherProfile.js","components/posts/Post.js","components/posts/MyPosts.js","routes/PrivateRoute.js","actions/path.js","App.js","index.js"],"names":["SET_ALERT","REMOVE_ALERT","REGISTRATION_SUCCESS","REGISTRATION_FAILURE","LOGIN_SUCCESS","LOGIN_FAILURE","AUTHENTICATION_SUCCESS","AUTHENTICATION_FAILURE","LOGOUT_SUCCESS","GET_PROFILE_SUCCESS","GET_PROFILE_FAILURE","GET_PROFILES_SUCCESS","GET_PROFILES_FAILURE","CREATE_PROFILE_SUCCESS","CREATE_PROFILE_FAILURE","UPDATE_PROFILE_SUCCESS","UPDATE_PROFILE_FAILURE","CLEAR_PROFILE","ADD_EXPERIENCE_SUCCESS","ADD_EXPERIENCE_FAILURE","ADD_EDUCATION_SUCCESS","ADD_EDUCATION_FAILURE","DELETE_EXPERIENCE_SUCCESS","DELETE_EXPERIENCE_FAILURE","DELETE_EDUCATION_SUCCESS","DELETE_EDUCATION_FAILURE","CHANGE_USER_AVATAR","SET_URL_PATH","SET_OTHER_PROFILE","FETCH_OTHER_PROFILE_SUCCESS","FETCH_OTHER_PROFILE_FAILURE","GET_USER_POSTS_SUCCESS","GET_USER_POSTS_FAILURE","GET_ALL_POSTS_SUCCESS","GET_ALL_POSTS_FAILURE","SUBMIT_USER_POST_SUCCESS","SUBMIT_USER_POST_FAILURE","SUBMIT_USER_COMMENT_SUCCESS","SUBMIT_USER_COMMENT_FAILURE","LIKES_CHANGED_SUCCESS","LIKES_CHANGED_FAILURE","DELETE_COMMENT_SUCCESS","DELETE_COMMENT_FAILURE","DELETE_POST_SUCCESS","DELETE_POST_FAILURE","CLEAR_POSTS","SET_POST_DATA","SET_POST_USER","initialState","alertReducer","state","action","type","payload","ActionTypes","filter","alert","id","token","localStorage","getItem","isAuthenticated","user","errors","authenticationReducer","setItem","removeItem","profile","otherProfile","profiles","error","profileReducer","path","pathReducer","userPosts","singlePost","allPosts","isUserPost","postsReducer","combineReducers","alerts","authentication","post","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","setAlert","message","alertType","timeout","dispatch","uuidv4","setTimeout","removeAlert","getUserProfiles","a","getState","config","headers","axios","get","response","data","fetchOtherProfile","getUserPosts","getAllPosts","console","log","likeButtonClicked","postId","put","likes","index","findIndex","userPost","_id","setPostData","setPostUser","flag","authenticateUser","logoutUser","Alert","getAlertComponent","props","length","map","className","this","Component","connect","Login","email","password","onChangeHandler","event","name","target","value","setState","onSubmitHandler","preventDefault","loginUser","to","onSubmit","placeholder","onChange","required","credentials","body","JSON","stringify","forEach","err","msg","Register","fname","lname","conform_password","registerUser","minLength","ForgotPassword","forgotPassword","ResetPassword","confirm_password","redirectToSignIn","resetPassword","match","params","Loading","src","spinner","alt","style","width","margin","display","AllPosts","timer","componentDidMount","getDate","date","format","getLikesClassName","some","like","refreshPage","getPosts","onClick","avatar","textAlign","fontSize","marginBottom","text","comments","setInterval","Landing","getRandomNumber","Math","floor","random","Navbar","navbarBeforeAuthentication","Helmet","navbarAfterAuthentication","Experience","exp","from","current","getExperience","experience","company","title","deleteExperience","delete","Education","edu","getEducation","education","institute","degree","deleteEducation","Dashboard","CreateProfile","status","location","skills","bio","website","twitter","facebook","youtube","linkedin","instagram","github","showSocialNetworkLinks","toggle","createUserProfile","getSocialMediaLinks","EditProfile","toString","social","redirectToDashboard","updateUserProfile","AddExperience","description","onChangeHandlerAtCheckBox","addExperience","setDisabled","disabled","cols","rows","href","AddEducation","field","addEducation","UserProfiles","getSkills","skill","getProfiles","setOtherProfile","Nerds","searchProfile","name1","name2","profiles1","toLowerCase","profiles2","concat","names","split","ProfileTop","loading","uploadImage","file","files","formData","FormData","append","changeAvatar","window","reload","getBackground","getSocialLinks","rel","accept","htmlFor","backgroundImage","ProfileAbout","getButtons","myProfile","ProfileExperience","ProfileEducation","MyProfile","ProfileTopOther","OtherProfile","Post","getButton","userId","commentId","deleteComment","marginRight","float","submitUserComment","onProfileClickHandler","getComments","comment","clear","MyPosts","submitUserPosts","deletePost","unshift","PrivateRoute","exact","component","setURLPath","App","disableContextMenu","onContextMenu","SignIn","SignUp","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.802066f0.chunk.js","sourcesContent":["export const SET_ALERT = \"set_alert\";\r\nexport const REMOVE_ALERT = \"remove_alert\";\r\nexport const REGISTRATION_SUCCESS = \"registration_success\";\r\nexport const REGISTRATION_FAILURE = \"registration_failure\";\r\nexport const LOGIN_SUCCESS = \"login_success\";\r\nexport const LOGIN_FAILURE = \"login_failure\";\r\nexport const AUTHENTICATION_SUCCESS = \"authentication_success\";\r\nexport const AUTHENTICATION_FAILURE = \"authentication_failure\";\r\nexport const LOGOUT_SUCCESS = \"logout_success\";\r\nexport const GET_PROFILE_SUCCESS = \"get_profile_success\";\r\nexport const GET_PROFILE_FAILURE = \"get_profile_failure\";\r\nexport const GET_PROFILES_SUCCESS = \"get_profiles_success\";\r\nexport const GET_PROFILES_FAILURE = \"get_profiles_failure\";\r\nexport const CREATE_PROFILE_SUCCESS = \"create_profile_success\";\r\nexport const CREATE_PROFILE_FAILURE = \"create_profile_failure\";\r\nexport const UPDATE_PROFILE_SUCCESS = \"update_profile_success\";\r\nexport const UPDATE_PROFILE_FAILURE = \"update_profile_failure\";\r\nexport const CLEAR_PROFILE = \"clear_profile\";\r\nexport const ADD_EXPERIENCE_SUCCESS = \"add_experience_success\";\r\nexport const ADD_EXPERIENCE_FAILURE = \"add_experience_failure\";\r\nexport const ADD_EDUCATION_SUCCESS = \"add_education_success\";\r\nexport const ADD_EDUCATION_FAILURE = \"add_education_failure\";\r\nexport const DELETE_EXPERIENCE_SUCCESS = \"delete_experience_success\";\r\nexport const DELETE_EXPERIENCE_FAILURE = \"delete_experience_failure\";\r\nexport const DELETE_EDUCATION_SUCCESS = \"delete_education_success\";\r\nexport const DELETE_EDUCATION_FAILURE = \"delete_education_failure\";\r\nexport const CHANGE_USER_AVATAR = \"change_user_avatar\";\r\nexport const SET_URL_PATH = \"set_url_path\";\r\nexport const SET_OTHER_PROFILE = \"set_other_profile\";\r\nexport const FETCH_OTHER_PROFILE_SUCCESS = \"fetch_other_profile_success\";\r\nexport const FETCH_OTHER_PROFILE_FAILURE = \"fetch_other_profile_failure\";\r\nexport const GET_USER_POSTS_SUCCESS = \"get_user_posts_success\";\r\nexport const GET_USER_POSTS_FAILURE = \"get_user_posts_failure\";\r\nexport const GET_ALL_POSTS_SUCCESS = \"get_all_posts_success\";\r\nexport const GET_ALL_POSTS_FAILURE = \"get_all_posts_failure\";\r\nexport const SUBMIT_USER_POST_SUCCESS = \"submit_user_post_success\";\r\nexport const SUBMIT_USER_POST_FAILURE = \"submit_user_post_failure\";\r\nexport const SUBMIT_USER_COMMENT_SUCCESS = \"submit_user_comment_success\";\r\nexport const SUBMIT_USER_COMMENT_FAILURE = \"submit_user_comment_failure\";\r\nexport const LIKES_CHANGED_SUCCESS = \"likes_changed_success\";\r\nexport const LIKES_CHANGED_FAILURE = \"likes_changed_failure\";\r\nexport const DELETE_COMMENT_SUCCESS = \"delete_comment_success\";\r\nexport const DELETE_COMMENT_FAILURE = \"delete_comment_failure\";\r\nexport const DELETE_POST_SUCCESS = \"delete_post_success\";\r\nexport const DELETE_POST_FAILURE = \"delete_post_failure\";\r\nexport const CLEAR_POSTS = \"clear_posts\";\r\nexport const SET_POST_DATA = \"set_post_data\";\r\nexport const SET_POST_USER = \"set_post_user\";\r\n","import * as ActionTypes from \"../actions/types\";\r\n\r\nconst initialState = [];\r\n\r\nconst alertReducer = (state = initialState, action) => {\r\n    const { type, payload } = action;\r\n    switch (type) {\r\n        case ActionTypes.SET_ALERT:\r\n            return [...state, payload];\r\n        case ActionTypes.REMOVE_ALERT:\r\n            return state.filter((alert) => alert.id !== payload.id);\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default alertReducer;\r\n","import * as ActionTypes from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    token: localStorage.getItem(\"token\"),\r\n    isAuthenticated: false,\r\n    user: null,\r\n    errors: null,\r\n};\r\n\r\nconst authenticationReducer = (state = initialState, action) => {\r\n    const { type, payload } = action;\r\n    switch (type) {\r\n        case ActionTypes.AUTHENTICATION_SUCCESS:\r\n            return {\r\n                ...state,\r\n                token: state.token,\r\n                isAuthenticated: true,\r\n                user: payload,\r\n                errors: null,\r\n            };\r\n        case ActionTypes.REGISTRATION_SUCCESS:\r\n            localStorage.setItem(\"token\", payload.token);\r\n            return {\r\n                ...state,\r\n                token: payload.token,\r\n                isAuthenticated: false,\r\n                user: null,\r\n                errors: null,\r\n            };\r\n        case ActionTypes.LOGIN_SUCCESS:\r\n            localStorage.setItem(\"token\", payload.token);\r\n            return {\r\n                ...state,\r\n                token: payload.token,\r\n                isAuthenticated: false,\r\n                user: null,\r\n                errors: null,\r\n            };\r\n        case ActionTypes.AUTHENTICATION_FAILURE:\r\n        case ActionTypes.REGISTRATION_FAILURE:\r\n        case ActionTypes.LOGIN_FAILURE:\r\n        case ActionTypes.LOGOUT_SUCCESS:\r\n            localStorage.removeItem(\"token\");\r\n            return { ...state, token: null, isAuthenticated: false, user: null, errors: payload };\r\n        case ActionTypes.CHANGE_USER_AVATAR:\r\n            return { ...state, user: payload };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default authenticationReducer;\r\n","import * as ActionTypes from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    profile: null,\r\n    otherProfile: null,\r\n    profiles: [],\r\n    error: null,\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    const { type, payload } = action;\r\n    switch (type) {\r\n        case ActionTypes.GET_PROFILE_SUCCESS:\r\n        case ActionTypes.CREATE_PROFILE_SUCCESS:\r\n        case ActionTypes.UPDATE_PROFILE_SUCCESS:\r\n        case ActionTypes.ADD_EXPERIENCE_SUCCESS:\r\n        case ActionTypes.ADD_EDUCATION_SUCCESS:\r\n        case ActionTypes.DELETE_EXPERIENCE_SUCCESS:\r\n        case ActionTypes.DELETE_EDUCATION_SUCCESS:\r\n            return { ...state, profile: payload };\r\n        case ActionTypes.GET_PROFILE_FAILURE:\r\n        case ActionTypes.CREATE_PROFILE_FAILURE:\r\n        case ActionTypes.UPDATE_PROFILE_FAILURE:\r\n        case ActionTypes.ADD_EXPERIENCE_FAILURE:\r\n        case ActionTypes.ADD_EDUCATION_FAILURE:\r\n        case ActionTypes.DELETE_EXPERIENCE_FAILURE:\r\n        case ActionTypes.DELETE_EDUCATION_FAILURE:\r\n        case ActionTypes.FETCH_OTHER_PROFILE_FAILURE:\r\n            return { ...state, error: payload };\r\n        case ActionTypes.CLEAR_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: null,\r\n                error: null,\r\n                profiles: [],\r\n                otherProfile: null,\r\n            };\r\n        case ActionTypes.GET_PROFILES_SUCCESS:\r\n            return { ...state, profiles: payload };\r\n        case ActionTypes.GET_PROFILES_FAILURE:\r\n            return { ...state, error: payload };\r\n        case ActionTypes.SET_OTHER_PROFILE:\r\n        case ActionTypes.FETCH_OTHER_PROFILE_SUCCESS:\r\n            return { ...state, otherProfile: payload };\r\n        case ActionTypes.CHANGE_USER_AVATAR:\r\n            return { ...state, profile: { ...state.profile, user: payload } };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default profileReducer;\r\n","import * as ActionTypes from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    path: \"/\",\r\n};\r\n\r\nconst pathReducer = (state = initialState, action) => {\r\n    const { type, payload } = action;\r\n    switch (type) {\r\n        case ActionTypes.SET_URL_PATH:\r\n            return { path: payload };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nexport default pathReducer;\r\n","import * as ActionTypes from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    userPosts: [],\r\n    errors: null,\r\n    singlePost: null,\r\n    allPosts: [],\r\n    isUserPost: null,\r\n};\r\n\r\nconst postsReducer = (state = initialState, action) => {\r\n    const { type, payload } = action;\r\n    switch (type) {\r\n        case ActionTypes.GET_ALL_POSTS_SUCCESS:\r\n            return { ...state, allPosts: payload };\r\n        case ActionTypes.GET_USER_POSTS_SUCCESS:\r\n        case ActionTypes.SUBMIT_USER_POST_SUCCESS:\r\n        case ActionTypes.DELETE_POST_SUCCESS:\r\n            return { ...state, userPosts: payload };\r\n        case ActionTypes.SUBMIT_USER_COMMENT_SUCCESS:\r\n        case ActionTypes.DELETE_COMMENT_SUCCESS:\r\n            return {\r\n                ...state,\r\n                userPosts: payload.userPosts,\r\n                singlePost: payload.singlePost,\r\n                allPosts: payload.allPosts,\r\n            };\r\n        case ActionTypes.LIKES_CHANGED_SUCCESS:\r\n            return { ...state, userPosts: payload.userPosts, allPosts: payload.allPosts };\r\n        case ActionTypes.GET_USER_POSTS_FAILURE:\r\n        case ActionTypes.GET_ALL_POSTS_FAILURE:\r\n        case ActionTypes.SUBMIT_USER_POST_FAILURE:\r\n        case ActionTypes.SUBMIT_USER_COMMENT_FAILURE:\r\n        case ActionTypes.LIKES_CHANGED_FAILURE:\r\n        case ActionTypes.DELETE_POST_FAILURE:\r\n        case ActionTypes.DELETE_COMMENT_FAILURE:\r\n            return { ...state, errors: payload };\r\n        case ActionTypes.SET_POST_DATA:\r\n            return { ...state, singlePost: payload };\r\n        case ActionTypes.SET_POST_USER:\r\n            return { ...state, isUserPost: payload };\r\n        case ActionTypes.CLEAR_POSTS:\r\n            return {\r\n                userPosts: [],\r\n                errors: null,\r\n                singlePost: null,\r\n                allPosts: [],\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default postsReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport alertReducer from \"./alert\";\r\nimport authenticationReducer from \"./authentication\";\r\nimport profileReducer from \"./profile\";\r\nimport pathReducer from \"./path\";\r\nimport postsReducer from \"./post\";\r\n\r\nexport default combineReducers({\r\n    alerts: alertReducer,\r\n    authentication: authenticationReducer,\r\n    profile: profileReducer,\r\n    path: pathReducer,\r\n    post: postsReducer,\r\n});\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers/root\";\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(...middleware)));\r\n\r\nexport default store;\r\n","import { v4 as uuidv4 } from \"uuid\";\r\nimport * as ActionTypes from \"./types\";\r\n\r\nexport const setAlert =\r\n    (message, alertType, timeout = 3000) =>\r\n    (dispatch) => {\r\n        const id = uuidv4();\r\n        dispatch({\r\n            type: ActionTypes.SET_ALERT,\r\n            payload: {\r\n                id,\r\n                alertType,\r\n                message,\r\n            },\r\n        });\r\n        setTimeout(() => removeAlert(id, dispatch), timeout);\r\n    };\r\n\r\nconst removeAlert = (id, dispatch) => {\r\n    dispatch({\r\n        type: ActionTypes.REMOVE_ALERT,\r\n        payload: {\r\n            id,\r\n        },\r\n    });\r\n};\r\n","import axios from \"axios\";\r\nimport store from \"../store\";\r\nimport { setAlert } from \"./alert\";\r\nimport * as ActionTypes from \"./types\";\r\n\r\nexport const getUserProfile = () => async (dispatch) => {\r\n    const state = store.getState();\r\n    const token = state.authentication.token;\r\n    const config = {\r\n        headers: {\r\n            \"x-auth-token\": token,\r\n        },\r\n    };\r\n    try {\r\n        const response = await axios.get(\r\n            \"https://nerds-together.glitch.me/api/profiles/me\",\r\n            config\r\n        );\r\n        const profile = response.data;\r\n        dispatch({\r\n            type: ActionTypes.GET_PROFILE_SUCCESS,\r\n            payload: profile,\r\n        });\r\n    } catch (error) {\r\n        const errors = error.response.data.errors;\r\n        dispatch({\r\n            type: ActionTypes.GET_PROFILE_FAILURE,\r\n            payload: errors,\r\n        });\r\n    }\r\n};\r\n\r\nexport const getUserProfiles = () => async (dispatch) => {\r\n    const state = store.getState();\r\n    const token = state.authentication.token;\r\n    const config = {\r\n        headers: {\r\n            \"x-auth-token\": token,\r\n        },\r\n    };\r\n    try {\r\n        const response = await axios.get(\"https://nerds-together.glitch.me/api/profiles\", config);\r\n        const profiles = response.data;\r\n        dispatch({\r\n            type: ActionTypes.GET_PROFILES_SUCCESS,\r\n            payload: profiles,\r\n        });\r\n    } catch (error) {\r\n        const errors = error.response.data.errors;\r\n        dispatch({\r\n            type: ActionTypes.GET_PROFILES_FAILURE,\r\n            payload: errors,\r\n        });\r\n    }\r\n};\r\n\r\nexport const createUserProfile = (profile) => async (dispatch) => {\r\n    const state = store.getState();\r\n    const token = state.authentication.token;\r\n    const config = {\r\n        headers: {\r\n            \"x-auth-token\": token,\r\n        },\r\n    };\r\n    const body = profile;\r\n    try {\r\n        const response = await axios.post(\r\n            \"https://nerds-together.glitch.me/api/profiles\",\r\n            body,\r\n            config\r\n        );\r\n        dispatch(setAlert(\"Profile Created Successfully\", \"success\"));\r\n        const profile = response.data;\r\n        dispatch({\r\n            type: ActionTypes.CREATE_PROFILE_SUCCESS,\r\n            payload: profile,\r\n        });\r\n    } catch (error) {\r\n        const errors = error.response.data.errors;\r\n        dispatch({\r\n            type: ActionTypes.CREATE_PROFILE_FAILURE,\r\n            payload: errors,\r\n        });\r\n        if (errors) {\r\n            errors.forEach((err) => dispatch(setAlert(err.msg, \"danger\")));\r\n        }\r\n    }\r\n};\r\n\r\nexport const updateUserProfile = (profile) => async (dispatch) => {\r\n    const state = store.getState();\r\n    const token = state.authentication.token;\r\n    const config = {\r\n        headers: {\r\n            \"x-auth-token\": token,\r\n        },\r\n    };\r\n    const body = profile;\r\n    try {\r\n        const response = await axios.post(\r\n            \"https://nerds-together.glitch.me/api/profiles\",\r\n            body,\r\n            config\r\n        );\r\n        dispatch(setAlert(\"Profile Updated Successfully\", \"success\"));\r\n        const profile = response.data;\r\n        dispatch({\r\n            type: ActionTypes.UPDATE_PROFILE_SUCCESS,\r\n            payload: profile,\r\n        });\r\n    } catch (error) {\r\n        const errors = error.response.data.errors;\r\n        dispatch({\r\n            type: ActionTypes.UPDATE_PROFILE_FAILURE,\r\n            payload: errors,\r\n        });\r\n        if (errors) {\r\n            errors.forEach((err) => dispatch(setAlert(err.msg, \"danger\")));\r\n        }\r\n    }\r\n};\r\n\r\nexport const addExperience = (experience) => async (dispatch) => {\r\n    const state = store.getState();\r\n    const token = state.authentication.token;\r\n    const config = {\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"x-auth-token\": token,\r\n        },\r\n    };\r\n    const body = experience;\r\n    try {\r\n        const response = await axios.put(\r\n            \"https://nerds-together.glitch.me/api/profiles/experience\",\r\n            body,\r\n            config\r\n        );\r\n        dispatch(setAlert(\"Experience Added Successfully\", \"success\"));\r\n        const profile = response.data;\r\n        dispatch({\r\n            type: ActionTypes.ADD_EXPERIENCE_SUCCESS,\r\n            payload: profile,\r\n        });\r\n    } catch (error) {\r\n        const errors = error.response.data.errors;\r\n        dispatch({\r\n            type: ActionTypes.ADD_EXPERIENCE_FAILURE,\r\n            payload: errors,\r\n        });\r\n        if (errors) {\r\n            errors.forEach((err) => dispatch(setAlert(err.msg, \"danger\")));\r\n        }\r\n    }\r\n};\r\n\r\nexport const deleteExperience = (id) => async (dispatch) => {\r\n    const state = store.getState();\r\n    const token = state.authentication.token;\r\n    const config = {\r\n        headers: {\r\n            \"x-auth-token\": token,\r\n        },\r\n    };\r\n    try {\r\n        const response = await axios.delete(\r\n            `https://nerds-together.glitch.me/api/profiles/experience/${id}`,\r\n            config\r\n        );\r\n        dispatch(setAlert(\"Experience Deleted Successfully\", \"success\"));\r\n        const profile = response.data;\r\n        dispatch({\r\n            type: ActionTypes.DELETE_EXPERIENCE_SUCCESS,\r\n            payload: profile,\r\n        });\r\n    } catch (error) {\r\n        const errors = error.response.data.errors;\r\n        dispatch({\r\n            type: ActionTypes.DELETE_EXPERIENCE_FAILURE,\r\n            payload: errors,\r\n        });\r\n        if (errors) {\r\n            errors.forEach((err) => dispatch(setAlert(err.msg, \"danger\")));\r\n        }\r\n    }\r\n};\r\n\r\nexport const addEducation = (education) => async (dispatch) => {\r\n    const state = store.getState();\r\n    const token = state.authentication.token;\r\n    const config = {\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"x-auth-token\": token,\r\n        },\r\n    };\r\n    const body = education;\r\n    try {\r\n        const response = await axios.put(\r\n            \"https://nerds-together.glitch.me/api/profiles/education\",\r\n            body,\r\n            config\r\n        );\r\n        dispatch(setAlert(\"Education Added Successfully\", \"success\"));\r\n        const profile = response.data;\r\n        dispatch({\r\n            type: ActionTypes.ADD_EDUCATION_SUCCESS,\r\n            payload: profile,\r\n        });\r\n    } catch (error) {\r\n        const errors = error.response.data.errors;\r\n        dispatch({\r\n            type: ActionTypes.ADD_EDUCATION_FAILURE,\r\n            payload: errors,\r\n        });\r\n        if (errors) {\r\n            errors.forEach((err) => dispatch(setAlert(err.msg, \"danger\")));\r\n        }\r\n    }\r\n};\r\n\r\nexport const deleteEducation = (id) => async (dispatch) => {\r\n    const state = store.getState();\r\n    const token = state.authentication.token;\r\n    const config = {\r\n        headers: {\r\n            \"x-auth-token\": token,\r\n        },\r\n    };\r\n    try {\r\n        const response = await axios.delete(\r\n            `https://nerds-together.glitch.me/api/profiles/education/${id}`,\r\n            config\r\n        );\r\n        dispatch(setAlert(\"Education Deleted Successfully\", \"success\"));\r\n        const profile = response.data;\r\n        dispatch({\r\n            type: ActionTypes.DELETE_EDUCATION_SUCCESS,\r\n            payload: profile,\r\n        });\r\n    } catch (error) {\r\n        const errors = error.response.data.errors;\r\n        dispatch({\r\n            type: ActionTypes.DELETE_EDUCATION_FAILURE,\r\n            payload: errors,\r\n        });\r\n        if (errors) {\r\n            errors.forEach((err) => dispatch(setAlert(err.msg, \"danger\")));\r\n        }\r\n    }\r\n};\r\n\r\nexport const clearUserProfile = () => (dispatch) => {\r\n    dispatch({\r\n        type: ActionTypes.CLEAR_PROFILE,\r\n    });\r\n};\r\n\r\nexport const setOtherProfile = (profile) => (dispatch) => {\r\n    dispatch({\r\n        type: ActionTypes.SET_OTHER_PROFILE,\r\n        payload: profile,\r\n    });\r\n};\r\n\r\nexport const fetchOtherProfile = (id) => async (dispatch) => {\r\n    const state = store.getState();\r\n    const token = state.authentication.token;\r\n    const config = {\r\n        headers: {\r\n            \"x-auth-token\": token,\r\n        },\r\n    };\r\n    try {\r\n        const response = await axios.get(\r\n            `https://nerds-together.glitch.me/api/profiles/user/${id}`,\r\n            config\r\n        );\r\n        const profile = response.data;\r\n        dispatch({\r\n            type: ActionTypes.FETCH_OTHER_PROFILE_SUCCESS,\r\n            payload: profile,\r\n        });\r\n    } catch (error) {\r\n        const errors = error.response.data.errors;\r\n        dispatch({\r\n            type: ActionTypes.FETCH_OTHER_PROFILE_FAILURE,\r\n            payload: errors,\r\n        });\r\n    }\r\n};\r\n","import axios from \"axios\";\r\nimport store from \"../store\";\r\nimport * as ActionTypes from \"./types\";\r\nimport { setAlert } from \"./alert\";\r\n\r\nexport const getUserPosts = () => async (dispatch) => {\r\n    const state = store.getState();\r\n    const token = state.authentication.token;\r\n    const config = {\r\n        headers: {\r\n            \"x-auth-token\": token,\r\n        },\r\n    };\r\n    try {\r\n        const response = await axios.get(\"https://nerds-together.glitch.me/api/posts/me\", config);\r\n        const userPosts = response.data;\r\n        dispatch({\r\n            type: ActionTypes.GET_USER_POSTS_SUCCESS,\r\n            payload: userPosts,\r\n        });\r\n    } catch (error) {\r\n        const errors = error.response.data.errors;\r\n        dispatch({\r\n            type: ActionTypes.GET_USER_POSTS_FAILURE,\r\n            payload: errors,\r\n        });\r\n    }\r\n};\r\n\r\nexport const getAllPosts = () => async (dispatch) => {\r\n    const state = store.getState();\r\n    const token = state.authentication.token;\r\n    const config = {\r\n        headers: {\r\n            \"x-auth-token\": token,\r\n        },\r\n    };\r\n    try {\r\n        const response = await axios.get(\"https://nerds-together.glitch.me/api/posts\", config);\r\n        const allPosts = response.data;\r\n        console.log(allPosts);\r\n        dispatch({\r\n            type: ActionTypes.GET_ALL_POSTS_SUCCESS,\r\n            payload: allPosts,\r\n        });\r\n    } catch (error) {\r\n        const errors = error.response.data.errors;\r\n        dispatch({\r\n            type: ActionTypes.GET_ALL_POSTS_FAILURE,\r\n            payload: errors,\r\n        });\r\n    }\r\n};\r\n\r\nexport const submitUserPost = (text) => async (dispatch) => {\r\n    const state = store.getState();\r\n    const token = state.authentication.token;\r\n    const userPosts = state.post.userPosts;\r\n    const config = {\r\n        headers: {\r\n            \"x-auth-token\": token,\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n    };\r\n    const body = {\r\n        text,\r\n    };\r\n    try {\r\n        const response = await axios.post(\r\n            \"https://nerds-together.glitch.me/api/posts\",\r\n            body,\r\n            config\r\n        );\r\n        const userPost = response.data;\r\n        userPosts.unshift(userPost);\r\n        dispatch({\r\n            type: ActionTypes.SUBMIT_USER_POST_SUCCESS,\r\n            payload: userPosts,\r\n        });\r\n    } catch (error) {\r\n        const errors = error.response.data.errors;\r\n        dispatch({\r\n            type: ActionTypes.SUBMIT_USER_POST_FAILURE,\r\n            payload: errors,\r\n        });\r\n        if (errors) {\r\n            errors.forEach((err) => dispatch(setAlert(err.msg, \"danger\")));\r\n        }\r\n    }\r\n};\r\n\r\nexport const submitUserComment = (text, postId) => async (dispatch) => {\r\n    const state = store.getState();\r\n    const isUserPost = state.post.isUserPost;\r\n    const token = state.authentication.token;\r\n    const userPosts = state.post.userPosts;\r\n    const allPosts = state.post.allPosts;\r\n    const config = {\r\n        headers: {\r\n            \"x-auth-token\": token,\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n    };\r\n    const body = {\r\n        text,\r\n    };\r\n\r\n    try {\r\n        const response = await axios.put(\r\n            `https://nerds-together.glitch.me/api/posts/comments/${postId}`,\r\n            body,\r\n            config\r\n        );\r\n        const comments = response.data;\r\n        if (isUserPost) {\r\n            const index = userPosts.findIndex((userPost) => userPost._id === postId);\r\n            userPosts[index].comments = comments;\r\n            dispatch({\r\n                type: ActionTypes.SUBMIT_USER_COMMENT_SUCCESS,\r\n                payload: { userPosts, singlePost: userPosts[index], allPosts },\r\n            });\r\n        } else {\r\n            const index = allPosts.findIndex((post) => post._id === postId);\r\n            allPosts[index].comments = comments;\r\n            dispatch({\r\n                type: ActionTypes.SUBMIT_USER_COMMENT_SUCCESS,\r\n                payload: { userPosts, singlePost: allPosts[index], allPosts },\r\n            });\r\n        }\r\n    } catch (error) {\r\n        console.log(error);\r\n        const errors = error.response.data.errors;\r\n        dispatch({\r\n            type: ActionTypes.SUBMIT_USER_COMMENT_FAILURE,\r\n            payload: errors,\r\n        });\r\n    }\r\n};\r\n\r\nexport const likeButtonClicked = (postId, isUserPost) => async (dispatch) => {\r\n    const state = store.getState();\r\n    const token = state.authentication.token;\r\n    const userPosts = state.post.userPosts;\r\n    const allPosts = state.post.allPosts;\r\n    const config = {\r\n        headers: {\r\n            \"x-auth-token\": token,\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n    };\r\n    try {\r\n        const response = await axios.put(\r\n            `https://nerds-together.glitch.me/api/posts/likes/${postId}`,\r\n            null,\r\n            config\r\n        );\r\n        const likes = response.data;\r\n        if (isUserPost) {\r\n            const index = userPosts.findIndex((userPost) => userPost._id === postId);\r\n            userPosts[index].likes = likes;\r\n            dispatch({\r\n                type: ActionTypes.LIKES_CHANGED_SUCCESS,\r\n                payload: { userPosts, allPosts },\r\n            });\r\n        } else {\r\n            const index = allPosts.findIndex((post) => post._id === postId);\r\n            allPosts[index].likes = likes;\r\n            dispatch({\r\n                type: ActionTypes.LIKES_CHANGED_SUCCESS,\r\n                payload: { userPosts, allPosts },\r\n            });\r\n        }\r\n    } catch (error) {\r\n        const errors = error.response.data.errors;\r\n        dispatch({\r\n            type: ActionTypes.LIKES_CHANGED_FAILURE,\r\n            payload: errors,\r\n        });\r\n    }\r\n};\r\n\r\nexport const deletePost = (postId) => async (dispatch) => {\r\n    const state = store.getState();\r\n    const token = state.authentication.token;\r\n    let userPosts = state.post.userPosts;\r\n    const config = {\r\n        headers: {\r\n            \"x-auth-token\": token,\r\n        },\r\n    };\r\n    try {\r\n        const response = await axios.delete(\r\n            `https://nerds-together.glitch.me/api/posts/post/${postId}`,\r\n            config\r\n        );\r\n        dispatch(setAlert(response.data.msg));\r\n        userPosts = userPosts.filter((userPost) => userPost._id !== postId);\r\n        dispatch({\r\n            type: ActionTypes.DELETE_POST_SUCCESS,\r\n            payload: userPosts,\r\n        });\r\n    } catch (error) {\r\n        const errors = error.response.data.errors;\r\n        dispatch({\r\n            type: ActionTypes.DELETE_POST_FAILURE,\r\n            payload: errors,\r\n        });\r\n        if (errors) {\r\n            errors.forEach((err) => dispatch(setAlert(err.msg, \"danger\")));\r\n        }\r\n    }\r\n};\r\n\r\nexport const deleteComment = (postId, commentId) => async (dispatch) => {\r\n    const state = store.getState();\r\n    const isUserPost = state.post.isUserPost;\r\n    const token = state.authentication.token;\r\n    const userPosts = state.post.userPosts;\r\n    const allPosts = state.post.allPosts;\r\n    const config = {\r\n        headers: {\r\n            \"x-auth-token\": token,\r\n        },\r\n    };\r\n    try {\r\n        const response = await axios.delete(\r\n            `https://nerds-together.glitch.me/api/posts/comments/${postId}/${commentId}`,\r\n            config\r\n        );\r\n        const comments = response.data;\r\n        dispatch(setAlert(\"Comment Deleted Successfully\", \"success\"));\r\n        if (isUserPost) {\r\n            const index = userPosts.findIndex((userPost) => userPost._id === postId);\r\n            userPosts[index].comments = comments;\r\n            dispatch({\r\n                type: ActionTypes.DELETE_COMMENT_SUCCESS,\r\n                payload: { userPosts, singlePost: userPosts[index], allPosts },\r\n            });\r\n        } else {\r\n            const index = allPosts.findIndex((post) => post._id === postId);\r\n            allPosts[index].comments = comments;\r\n            dispatch({\r\n                type: ActionTypes.DELETE_COMMENT_SUCCESS,\r\n                payload: { userPosts, singlePost: allPosts[index], allPosts },\r\n            });\r\n        }\r\n    } catch (error) {\r\n        const errors = error.response.data.errors;\r\n        dispatch({\r\n            type: ActionTypes.DELETE_COMMENT_FAILURE,\r\n            payload: errors,\r\n        });\r\n        if (errors) {\r\n            errors.forEach((err) => dispatch(setAlert(err.msg, \"danger\")));\r\n        }\r\n    }\r\n};\r\n\r\nexport const setPostData = (post) => (dispatch) => {\r\n    dispatch({\r\n        type: ActionTypes.SET_POST_DATA,\r\n        payload: post,\r\n    });\r\n};\r\nexport const setPostUser = (flag) => (dispatch) => {\r\n    dispatch({\r\n        type: ActionTypes.SET_POST_USER,\r\n        payload: flag,\r\n    });\r\n};\r\n\r\nexport const clearPosts = () => (dispatch) => {\r\n    dispatch({\r\n        type: ActionTypes.CLEAR_POSTS,\r\n    });\r\n};\r\n","import axios from \"axios\";\r\nimport store from \"../store\";\r\nimport * as ActionTypes from \"./types\";\r\nimport { setAlert } from \"./alert\";\r\nimport { clearUserProfile, getUserProfile, getUserProfiles } from \"./profile\";\r\nimport { clearPosts, getUserPosts, getAllPosts } from \"./post\";\r\n\r\nexport const authenticateUser = () => async (dispatch) => {\r\n    const state = store.getState();\r\n    const config = {\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"x-auth-token\": state.authentication.token,\r\n        },\r\n    };\r\n    try {\r\n        const response = await axios.get(\r\n            \"https://nerds-together.glitch.me/api/authentication\",\r\n            config\r\n        );\r\n        const user = response.data;\r\n        dispatch({\r\n            type: ActionTypes.AUTHENTICATION_SUCCESS,\r\n            payload: user,\r\n        });\r\n        dispatch(getUserProfile());\r\n        dispatch(getAllPosts());\r\n        dispatch(getUserPosts());\r\n        dispatch(getUserProfiles());\r\n    } catch (error) {\r\n        const errors = error.response.data.errors;\r\n        dispatch({\r\n            type: ActionTypes.AUTHENTICATION_FAILURE,\r\n            payload: errors,\r\n        });\r\n    }\r\n};\r\n\r\nexport const registerUser = (credentials) => async (dispatch) => {\r\n    const config = {\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n    };\r\n    const body = JSON.stringify(credentials);\r\n    try {\r\n        const response = await axios.post(\r\n            \"https://nerds-together.glitch.me/api/users/\",\r\n            body,\r\n            config\r\n        );\r\n        dispatch(setAlert(\"Successfully Signed Up\", \"success\"));\r\n        dispatch({\r\n            type: ActionTypes.REGISTRATION_SUCCESS,\r\n            payload: response.data,\r\n        });\r\n        dispatch(authenticateUser());\r\n    } catch (error) {\r\n        const errors = error.response.data.errors;\r\n        dispatch({\r\n            type: ActionTypes.REGISTRATION_FAILURE,\r\n            payload: errors,\r\n        });\r\n        if (errors) {\r\n            errors.forEach((err) => dispatch(setAlert(err.msg, \"danger\")));\r\n        }\r\n    }\r\n};\r\n\r\nexport const loginUser = (credentials) => async (dispatch) => {\r\n    const config = {\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n    };\r\n    const body = JSON.stringify(credentials);\r\n    try {\r\n        const response = await axios.post(\r\n            \"https://nerds-together.glitch.me/api/authentication/\",\r\n            body,\r\n            config\r\n        );\r\n        dispatch(setAlert(\"Successfully Signed In\", \"success\"));\r\n        dispatch({\r\n            type: ActionTypes.LOGIN_SUCCESS,\r\n            payload: response.data,\r\n        });\r\n        dispatch(authenticateUser());\r\n    } catch (error) {\r\n        const errors = error.response.data.errors;\r\n        dispatch({\r\n            type: ActionTypes.LOGIN_FAILURE,\r\n            payload: errors,\r\n        });\r\n        if (errors) {\r\n            errors.forEach((err) => dispatch(setAlert(err.msg, \"danger\")));\r\n        }\r\n    }\r\n};\r\n\r\nexport const logoutUser = () => (dispatch) => {\r\n    dispatch(clearUserProfile());\r\n    dispatch(clearPosts());\r\n    dispatch({\r\n        type: ActionTypes.LOGOUT_SUCCESS,\r\n    });\r\n};\r\n\r\nexport const forgotPassword = (email) => async (dispatch) => {\r\n    const config = {\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n    };\r\n    const body = JSON.stringify({ email });\r\n    try {\r\n        const response = await axios.post(\r\n            \"https://nerds-together.glitch.me/api/authentication/forgot-password\",\r\n            body,\r\n            config\r\n        );\r\n        dispatch(setAlert(response.data.msg, \"success\"));\r\n    } catch (error) {\r\n        const errors = error.response.data.errors;\r\n        if (errors) {\r\n            errors.forEach((err) => dispatch(setAlert(err.msg, \"danger\")));\r\n        }\r\n    }\r\n};\r\n\r\nexport const resetPassword = (password, token) => async (dispatch) => {\r\n    const config = {\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"x-auth-token\": token,\r\n        },\r\n    };\r\n    const body = JSON.stringify({ password });\r\n    try {\r\n        const response = await axios.post(\r\n            \"https://nerds-together.glitch.me/api/authentication/reset-password\",\r\n            body,\r\n            config\r\n        );\r\n        dispatch(setAlert(response.data.msg, \"success\"));\r\n        dispatch(logoutUser());\r\n    } catch (error) {\r\n        const errors = error.response.data.errors;\r\n        if (errors) {\r\n            errors.forEach((err) => dispatch(setAlert(err.msg, \"danger\")));\r\n        }\r\n    }\r\n};\r\n\r\nexport const changeAvatar = (formData) => async (dispatch) => {\r\n    const state = store.getState();\r\n    const token = state.authentication.token;\r\n    const config = {\r\n        headers: {\r\n            \"x-auth-token\": token,\r\n            \"content-type\": \"multipart/form-data\",\r\n        },\r\n    };\r\n    try {\r\n        const response = await axios.post(\r\n            \"https://nerds-together.glitch.me/api/authentication/avatars\",\r\n            formData,\r\n            config\r\n        );\r\n        const user = response.data;\r\n        dispatch({\r\n            type: ActionTypes.CHANGE_USER_AVATAR,\r\n            payload: user,\r\n        });\r\n        setTimeout(() => {\r\n            dispatch(setAlert(\"Avatar Updated Successfully\", \"success\"));\r\n        }, 6000);\r\n    } catch (error) {\r\n        const errors = error.response.data.errors;\r\n        if (errors) {\r\n            errors.forEach((err) => dispatch(setAlert(err.msg, \"danger\")));\r\n        }\r\n    }\r\n};\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Alert extends Component {\r\n    getAlertComponent = () => {\r\n        if (this.props.alerts === null || this.props.alerts.length === 0) {\r\n            return <Fragment></Fragment>;\r\n        } else {\r\n            return (\r\n                <Fragment>\r\n                    {this.props.alerts.map((alert) => (\r\n                        <div key={alert.id} className={`alert alert-${alert.alertType}`}>\r\n                            {alert.message}\r\n                        </div>\r\n                    ))}\r\n                </Fragment>\r\n            );\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return <Fragment>{this.getAlertComponent()}</Fragment>;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    alerts: state.alerts,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Alert);\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { loginUser } from \"../../actions/authentication\";\r\nimport Alert from \"../layout/Alert\";\r\n\r\nclass Login extends Component {\r\n    state = {\r\n        email: \"\",\r\n        password: \"\",\r\n    };\r\n\r\n    onChangeHandler = (event) => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n        this.setState({ [name]: value });\r\n    };\r\n\r\n    onSubmitHandler = (event) => {\r\n        event.preventDefault();\r\n        const { email, password } = this.state;\r\n        this.props.loginUser({ email, password });\r\n    };\r\n\r\n    render() {\r\n        if (this.props.authentication.isAuthenticated) {\r\n            return <Redirect to={this.props.path} />;\r\n        } else {\r\n            return (\r\n                <Fragment>\r\n                    <section className=\"container\">\r\n                        <Alert />\r\n                        <h1 className=\"large text-primary\">Sign In</h1>\r\n                        <p className=\"lead\">\r\n                            <i className=\"fas fa-user fa-lg\"></i> Sign Into Your Account\r\n                        </p>\r\n                        <form className=\"form\" onSubmit={this.onSubmitHandler}>\r\n                            <div className=\"form-group\">\r\n                                <input\r\n                                    type=\"email\"\r\n                                    placeholder=\"Email Address\"\r\n                                    name=\"email\"\r\n                                    value={this.state.email}\r\n                                    onChange={this.onChangeHandler}\r\n                                    required\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <input\r\n                                    type=\"password\"\r\n                                    placeholder=\"Password\"\r\n                                    name=\"password\"\r\n                                    value={this.state.password}\r\n                                    onChange={this.onChangeHandler}\r\n                                    required\r\n                                />\r\n                            </div>\r\n                            <input type=\"submit\" className=\"btn btn-primary\" value=\"Sign In\" />\r\n                        </form>\r\n                        <p className=\"my-1\">\r\n                            Forgot Your Password? <Link to=\"/forgot-password\">Forgot Password</Link>\r\n                        </p>\r\n                        <p className=\"my-1\">\r\n                            Don't have an account? <Link to=\"/sign-up\">Sign Up</Link>\r\n                        </p>\r\n                    </section>\r\n                </Fragment>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    authentication: state.authentication,\r\n    profile: state.profile.profile,\r\n    path: state.path.path,\r\n});\r\n\r\nexport default connect(mapStateToProps, { loginUser })(Login);\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { setAlert } from \"../../actions/alert\";\r\nimport { registerUser } from \"../../actions/authentication\";\r\nimport Alert from \"../layout/Alert\";\r\n\r\nclass Register extends Component {\r\n    state = {\r\n        fname: \"\",\r\n        lname: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        conform_password: \"\",\r\n    };\r\n\r\n    onChangeHandler = (event) => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n        this.setState({ [name]: value });\r\n    };\r\n\r\n    onSubmitHandler = (event) => {\r\n        event.preventDefault();\r\n        if (this.state.password === this.state.conform_password) {\r\n            const { fname, lname, email, password } = this.state;\r\n            this.props.registerUser({ fname, lname, email, password });\r\n        } else {\r\n            this.props.setAlert(\"Password And Conform Password Do Not Match\", \"danger\");\r\n        }\r\n    };\r\n\r\n    render() {\r\n        if (this.props.authentication.isAuthenticated) {\r\n            return <Redirect to=\"/create-profile\" />;\r\n        }\r\n        return (\r\n            <Fragment>\r\n                <section className=\"container\">\r\n                    <Alert />\r\n                    <h1 className=\"large text-primary\">Sign Up</h1>\r\n                    <p className=\"lead\">\r\n                        <i className=\"fas fa-user fa-lg\"></i> Create Your Account\r\n                    </p>\r\n                    <form className=\"form\" onSubmit={this.onSubmitHandler}>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"First Name\"\r\n                                name=\"fname\"\r\n                                value={this.state.fname}\r\n                                onChange={this.onChangeHandler}\r\n                                required\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"Last Name\"\r\n                                name=\"lname\"\r\n                                value={this.state.lname}\r\n                                onChange={this.onChangeHandler}\r\n                                required\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"email\"\r\n                                placeholder=\"Email Address\"\r\n                                name=\"email\"\r\n                                value={this.state.email}\r\n                                onChange={this.onChangeHandler}\r\n                                required\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                placeholder=\"Password\"\r\n                                name=\"password\"\r\n                                minLength=\"8\"\r\n                                value={this.state.password}\r\n                                onChange={this.onChangeHandler}\r\n                                required\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                placeholder=\"Confirm Password\"\r\n                                name=\"conform_password\"\r\n                                minLength=\"8\"\r\n                                value={this.state.conform_password}\r\n                                onChange={this.onChangeHandler}\r\n                                required\r\n                            />\r\n                        </div>\r\n                        <input type=\"submit\" className=\"btn btn-primary\" value=\"Sign Up\" />\r\n                    </form>\r\n                    <p className=\"my-1\">\r\n                        Already have an account? <Link to=\"/sign-in\">Sign In</Link>\r\n                    </p>\r\n                </section>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    authentication: state.authentication,\r\n});\r\n\r\nexport default connect(mapStateToProps, { setAlert, registerUser })(Register);\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect, Link } from \"react-router-dom\";\r\nimport Alert from \"../layout/Alert\";\r\nimport { forgotPassword } from \"../../actions/authentication\";\r\n\r\nclass ForgotPassword extends Component {\r\n    state = {\r\n        email: \"\",\r\n    };\r\n\r\n    onChangeHandler = (event) => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n        this.setState({ [name]: value });\r\n    };\r\n\r\n    onSubmitHandler = (event) => {\r\n        event.preventDefault();\r\n        const { email } = this.state;\r\n        this.props.forgotPassword(email);\r\n    };\r\n\r\n    render() {\r\n        if (this.props.authentication.isAuthenticated) {\r\n            return <Redirect to=\"/dashboard\" />;\r\n        } else {\r\n            return (\r\n                <Fragment>\r\n                    <section className=\"container\">\r\n                        <Alert />\r\n                        <h1 className=\"large text-primary\">Forgot Password</h1>\r\n                        <p className=\"lead\">\r\n                            <i className=\"fas fa-key fa-lg\"></i> Forgot Your Password, Don't Worry\r\n                            Just Enter Your Email ID.\r\n                        </p>\r\n                        <form className=\"form\" onSubmit={this.onSubmitHandler}>\r\n                            <div className=\"form-group\">\r\n                                <input\r\n                                    type=\"email\"\r\n                                    placeholder=\"Email Address\"\r\n                                    name=\"email\"\r\n                                    value={this.state.email}\r\n                                    onChange={this.onChangeHandler}\r\n                                    required\r\n                                />\r\n                            </div>\r\n                            <input\r\n                                type=\"submit\"\r\n                                className=\"btn btn-primary\"\r\n                                value=\"Forgot Password\"\r\n                            />\r\n                        </form>\r\n                        <p className=\"my-1\">\r\n                            <Link to=\"/sign-in\">\r\n                                <i className=\"fas fa-backward\"></i>\r\n                                {\"  \"}Back\r\n                            </Link>\r\n                        </p>\r\n                    </section>\r\n                </Fragment>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    authentication: state.authentication,\r\n});\r\n\r\nexport default connect(mapStateToProps, { forgotPassword })(ForgotPassword);\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Alert from \"../layout/Alert\";\r\nimport { resetPassword } from \"../../actions/authentication\";\r\nimport { setAlert } from \"../../actions/alert\";\r\n\r\nclass ResetPassword extends Component {\r\n    state = {\r\n        password: \"\",\r\n        confirm_password: \"\",\r\n        redirectToSignIn: false,\r\n    };\r\n\r\n    onChangeHandler = (event) => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n        this.setState({ [name]: value });\r\n    };\r\n\r\n    onSubmitHandler = (event) => {\r\n        event.preventDefault();\r\n        if (this.state.password === this.state.confirm_password) {\r\n            const { password } = this.state;\r\n            this.props.resetPassword(password, this.props.match.params.token);\r\n            setTimeout(() => this.setState({ redirectToSignIn: true }), 3000);\r\n        } else {\r\n            this.props.setAlert(\"Password And Conform Password Do Not Match\", \"danger\");\r\n        }\r\n    };\r\n\r\n    render() {\r\n        if (this.state.redirectToSignIn) {\r\n            return <Redirect to=\"/sign-in\" />;\r\n        } else {\r\n            return (\r\n                <Fragment>\r\n                    <section className=\"container\">\r\n                        <Alert />\r\n                        <h1 className=\"large text-primary\">Reset Password</h1>\r\n                        <p className=\"lead\">\r\n                            <i className=\"fas fa-key fa-lg\"></i> Provide Your New Password\r\n                        </p>\r\n                        <form className=\"form\" onSubmit={this.onSubmitHandler}>\r\n                            <div className=\"form-group\">\r\n                                <input\r\n                                    type=\"password\"\r\n                                    placeholder=\"Password\"\r\n                                    name=\"password\"\r\n                                    value={this.state.password}\r\n                                    onChange={this.onChangeHandler}\r\n                                    required\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <input\r\n                                    type=\"password\"\r\n                                    placeholder=\"Confirm Password\"\r\n                                    name=\"confirm_password\"\r\n                                    value={this.state.confirm_password}\r\n                                    onChange={this.onChangeHandler}\r\n                                    required\r\n                                />\r\n                            </div>\r\n                            <input\r\n                                type=\"submit\"\r\n                                className=\"btn btn-primary\"\r\n                                value=\"Reset Password\"\r\n                            />\r\n                        </form>\r\n                    </section>\r\n                </Fragment>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(null, { resetPassword, setAlert })(ResetPassword);\r\n","export default __webpack_public_path__ + \"static/media/loading.706124a2.gif\";","import React, { Component, Fragment } from \"react\";\r\nimport spinner from \"../../img/loading.gif\";\r\n\r\nclass Loading extends Component {\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <img\r\n                    src={spinner}\r\n                    alt=\"loading...\"\r\n                    style={{ width: \"100px\", margin: \"150px auto\", display: \"block\" }}\r\n                />\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Loading;\r\n","import React, { Component, Fragment } from \"react\";\r\nimport Moment from \"react-moment\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport Loading from \"../layout/Loading\";\r\nimport { likeButtonClicked, setPostData, setPostUser, getAllPosts } from \"../../actions/post\";\r\nimport { fetchOtherProfile } from \"../../actions/profile\";\r\nimport Alert from \"../layout/Alert\";\r\n\r\nclass AllPosts extends Component {\r\n    state = {\r\n        allPosts: this.props.allPosts,\r\n        timer: true,\r\n    };\r\n\r\n    componentDidMount = () => {\r\n        this.props.getAllPosts();\r\n        setTimeout(() => this.setState({ allPosts: this.props.allPosts }), 3000);\r\n    };\r\n\r\n    getDate = (date) => {\r\n        return (\r\n            <Fragment>\r\n                <Moment format=\"DD/MM/YYYY\">{date}</Moment>\r\n            </Fragment>\r\n        );\r\n    };\r\n\r\n    getLikesClassName = (post) => {\r\n        if (post.likes.some((like) => like.user === this.props.user._id)) {\r\n            return \"fas fa-thumbs-up fa-lg liked\";\r\n        } else {\r\n            return \"fas fa-thumbs-up fa-lg\";\r\n        }\r\n    };\r\n\r\n    refreshPage = () => {\r\n        this.setState({ userPosts: this.props.userPosts });\r\n    };\r\n\r\n    getPosts = () => {\r\n        return this.state.allPosts.map((post) => {\r\n            return (\r\n                <Fragment key={post._id}>\r\n                    <div className=\"post bg-light p-1 my-1\">\r\n                        <div>\r\n                            <Link\r\n                                to=\"/profile\"\r\n                                onClick={() => this.props.fetchOtherProfile(post.user._id)}\r\n                            >\r\n                                <img\r\n                                    className=\"round-img\"\r\n                                    src={post.user.avatar}\r\n                                    alt={`${post.user.fname} ${post.user.lname}`}\r\n                                />\r\n                                <h4>\r\n                                    {post.user.fname} {post.user.lname}\r\n                                </h4>\r\n                            </Link>\r\n                        </div>\r\n                        <div>\r\n                            <p\r\n                                className=\"py-1 post-text\"\r\n                                style={{\r\n                                    textAlign: \"justify\",\r\n                                    fontSize: \"1.2rem\",\r\n                                    marginBottom: \"1rem\",\r\n                                }}\r\n                            >\r\n                                {post.text}\r\n                            </p>\r\n\r\n                            <button\r\n                                type=\"button\"\r\n                                className=\"btn btn-primary my-1\"\r\n                                onClick={() => this.props.likeButtonClicked(post._id, false)}\r\n                            >\r\n                                <i className={this.getLikesClassName(post)}></i>&nbsp;&nbsp;\r\n                                <span className=\"count\">{post.likes.length}</span>\r\n                            </button>\r\n\r\n                            <Link\r\n                                to=\"/post\"\r\n                                className=\"btn btn-primary my-1\"\r\n                                onClick={() => {\r\n                                    this.props.setPostUser(false);\r\n                                    this.props.setPostData(post);\r\n                                }}\r\n                            >\r\n                                Discussion <i className=\"far fa-comment fa-lg\"></i>&nbsp;&nbsp;\r\n                                <span className=\"count\">{post.comments.length}</span>\r\n                            </Link>\r\n\r\n                            <p className=\"post-date\">Posted On : {this.getDate(post.date)}</p>\r\n                        </div>\r\n                    </div>\r\n                </Fragment>\r\n            );\r\n        });\r\n    };\r\n\r\n    render() {\r\n        setInterval(this.refreshPage, 300);\r\n        if (this.state.timer) {\r\n            setTimeout(() => this.setState({ timer: false }), 2000);\r\n            return (\r\n                <Fragment>\r\n                    <Loading />\r\n                </Fragment>\r\n            );\r\n        } else {\r\n            if (this.props.profile) {\r\n                return (\r\n                    <Fragment>\r\n                        <section className=\"container\">\r\n                            <Alert />\r\n                            <h1 className=\"large text-primary\">\r\n                                <i className=\"fas fa-user\"></i> Welcome {this.props.user.fname}{\" \"}\r\n                                {this.props.user.lname}\r\n                            </h1>\r\n                            <p className=\"lead\">Posts From Other Users...</p>\r\n\r\n                            <div className=\"posts\">{this.getPosts()}</div>\r\n                        </section>\r\n                    </Fragment>\r\n                );\r\n            } else {\r\n                return <Redirect to=\"/create-profile\" />;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    user: state.authentication.user,\r\n    allPosts: state.post.allPosts,\r\n    profile: state.profile.profile,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n    fetchOtherProfile,\r\n    likeButtonClicked,\r\n    setPostData,\r\n    setPostUser,\r\n    getAllPosts,\r\n})(AllPosts);\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport AllPosts from \"../posts/AllPosts\";\r\n\r\nclass Landing extends Component {\r\n    getRandomNumber = () => {\r\n        return Math.floor(Math.random() * 4);\r\n    };\r\n    render() {\r\n        if (this.props.isAuthenticated) {\r\n            return <AllPosts />;\r\n        } else {\r\n            return (\r\n                <Fragment>\r\n                    <section className={`landing background${this.getRandomNumber()}`}>\r\n                        <div className=\"dark-overlay\">\r\n                            <div className=\"landing-inner\">\r\n                                <h1 className=\"x-large\">Nerds Together</h1>\r\n                                <p className=\"lead\">\r\n                                    Create A Nerd Profile, Share Questions And Get Help From Other\r\n                                    Nerds\r\n                                </p>\r\n                                <div className=\"buttons\">\r\n                                    <Link to=\"/sign-up\" className=\"btn btn-primary\">\r\n                                        Sign Up\r\n                                    </Link>\r\n                                    <Link to=\"sign-in\" className=\"btn btn-light\">\r\n                                        Sign In\r\n                                    </Link>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </section>\r\n                </Fragment>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuthenticated: state.authentication.isAuthenticated,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Landing);\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { logoutUser } from \"../../actions/authentication\";\r\n\r\nclass Navbar extends Component {\r\n    navbarBeforeAuthentication = () => {\r\n        return (\r\n            <Fragment>\r\n                <Helmet>\r\n                    <title>Welcome To Nerds Together</title>\r\n                </Helmet>\r\n                <nav className=\"navbar bg-dark\">\r\n                    <h1>\r\n                        <Link to=\"/\">\r\n                            <i className=\"fas fa-laptop-code\"></i> Nerds Together\r\n                        </Link>\r\n                    </h1>\r\n                    <ul>\r\n                        <li>\r\n                            <Link to=\"/sign-up\">\r\n                                &nbsp;&nbsp;\r\n                                <i className=\"fas fa-user-plus fa-lg\"></i>\r\n                                &nbsp;&nbsp;\r\n                            </Link>\r\n                        </li>\r\n                        <li>\r\n                            <Link to=\"/sign-in\">\r\n                                &nbsp;&nbsp;\r\n                                <i className=\"fas fa-sign-in-alt fa-lg\"></i>\r\n                                &nbsp;&nbsp;\r\n                            </Link>\r\n                        </li>\r\n                    </ul>\r\n                </nav>\r\n            </Fragment>\r\n        );\r\n    };\r\n\r\n    navbarAfterAuthentication = () => {\r\n        return (\r\n            <Fragment>\r\n                <Helmet>\r\n                    <title>\r\n                        Welcome {this.props.authentication.user.fname}{\" \"}\r\n                        {this.props.authentication.user.lname}\r\n                    </title>\r\n                </Helmet>\r\n                <nav className=\"navbar bg-dark\">\r\n                    <h1>\r\n                        <Link to=\"/\">\r\n                            <i className=\"fas fa-laptop-code fa-lg\"></i> Nerds Together\r\n                        </Link>\r\n                    </h1>\r\n                    <ul>\r\n                        <li>\r\n                            <Link to=\"/my-posts\">\r\n                                &nbsp;&nbsp;\r\n                                <i className=\"far fa-address-card fa-lg\"></i>\r\n                                &nbsp;&nbsp;\r\n                            </Link>\r\n                        </li>\r\n                        <li>\r\n                            <Link to=\"/my-profile\">\r\n                                &nbsp;&nbsp;\r\n                                <i className=\"fas fa-user-circle fa-lg\"></i>\r\n                                &nbsp;&nbsp;\r\n                            </Link>\r\n                        </li>\r\n                        <li>\r\n                            <Link to=\"/nerds\">\r\n                                &nbsp;&nbsp;\r\n                                <i className=\"fas fa-users fa-lg\"></i>\r\n                                &nbsp;&nbsp;\r\n                            </Link>\r\n                        </li>\r\n                        <li>\r\n                            <Link to=\"/sign-in\" onClick={this.props.logoutUser}>\r\n                                &nbsp;&nbsp;\r\n                                <i className=\"fas fa-sign-out-alt fa-lg\"></i>\r\n                                &nbsp;&nbsp;\r\n                            </Link>\r\n                        </li>\r\n                    </ul>\r\n                </nav>\r\n            </Fragment>\r\n        );\r\n    };\r\n\r\n    render() {\r\n        if (this.props.authentication.isAuthenticated) {\r\n            return this.navbarAfterAuthentication();\r\n        } else {\r\n            return this.navbarBeforeAuthentication();\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    authentication: state.authentication,\r\n});\r\n\r\nexport default connect(mapStateToProps, { logoutUser })(Navbar);\r\n","import React, { Component, Fragment } from \"react\";\r\nimport Moment from \"react-moment\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteExperience } from \"../../actions/profile\";\r\n\r\nclass Experience extends Component {\r\n    getDate = (exp) => {\r\n        return (\r\n            <Fragment>\r\n                <Moment format=\"DD/MM/YYYY\">{exp.from}</Moment>\r\n                {\" - \"}\r\n                {exp.current ? \"Till Now\" : <Moment format=\"DD/MM/YYYY\">{exp.to}</Moment>}\r\n            </Fragment>\r\n        );\r\n    };\r\n\r\n    getExperience = () => {\r\n        return this.props.profile.experience.map((experience) => {\r\n            return (\r\n                <tr key={experience._id}>\r\n                    <td>{experience.company}</td>\r\n                    <td className=\"hide-sm\">{experience.title}</td>\r\n                    <td className=\"hide-sm\">{this.getDate(experience)}</td>\r\n                    <td>\r\n                        <button\r\n                            className=\"btn btn-danger\"\r\n                            onClick={() => this.props.deleteExperience(experience._id)}\r\n                        >\r\n                            Delete\r\n                        </button>\r\n                    </td>\r\n                </tr>\r\n            );\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <h2 className=\"my-2\">Experience Credentials</h2>\r\n                <table className=\"table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Company</th>\r\n                            <th className=\"hide-sm\">Title</th>\r\n                            <th className=\"hide-sm\">Years</th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>{this.getExperience()}</tbody>\r\n                </table>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(null, { deleteExperience })(Experience);\r\n","import React, { Component, Fragment } from \"react\";\r\nimport Moment from \"react-moment\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteEducation } from \"../../actions/profile\";\r\n\r\nclass Education extends Component {\r\n    getDate = (edu) => {\r\n        return (\r\n            <Fragment>\r\n                <Moment format=\"DD/MM/YYYY\">{edu.from}</Moment>\r\n                {\" - \"}\r\n                {edu.current ? \"Till Now\" : <Moment format=\"DD/MM/YYYY\">{edu.to}</Moment>}\r\n            </Fragment>\r\n        );\r\n    };\r\n\r\n    getEducation = () => {\r\n        return this.props.profile.education.map((education) => {\r\n            return (\r\n                <tr key={education._id}>\r\n                    <td>{education.institute}</td>\r\n                    <td className=\"hide-sm\">{education.degree}</td>\r\n                    <td className=\"hide-sm\">{this.getDate(education)}</td>\r\n                    <td>\r\n                        <button\r\n                            className=\"btn btn-danger\"\r\n                            onClick={() => this.props.deleteEducation(education._id)}\r\n                        >\r\n                            Delete\r\n                        </button>\r\n                    </td>\r\n                </tr>\r\n            );\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <h2 className=\"my-2\">Education Credentials</h2>\r\n                <table className=\"table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>School</th>\r\n                            <th className=\"hide-sm\">Degree</th>\r\n                            <th className=\"hide-sm\">Years</th>\r\n                            <th />\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>{this.getEducation()}</tbody>\r\n                </table>\r\n\r\n                <div className=\"my-2\">\r\n                    <button className=\"btn btn-danger\">\r\n                        <i className=\"fas fa-user\"></i> &nbsp; Delete My Account\r\n                    </button>\r\n                </div>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(null, { deleteEducation })(Education);\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport Alert from \"../layout/Alert\";\r\nimport Experience from \"./Experience\";\r\nimport Education from \"./Education\";\r\n\r\nclass Dashboard extends Component {\r\n    render() {\r\n        if (this.props.profile.profile) {\r\n            return (\r\n                <Fragment>\r\n                    <section className=\"container\">\r\n                        <Alert />\r\n                        <h1 className=\"large text-primary\">Dashboard</h1>\r\n                        <p className=\"lead\">\r\n                            <i className=\"fas fa-columns fa-lg\"></i> Provide Your Personal Details\r\n                            To Share With Others\r\n                        </p>\r\n                        <div className=\"dash-buttons\">\r\n                            <Link to=\"/edit-profile\" className=\"btn btn-light\">\r\n                                <i className=\"fas fa-user-circle text-primary\"></i>\r\n                                &nbsp;&nbsp;&nbsp;Edit Profile\r\n                            </Link>\r\n                            <Link to=\"/add-experience\" className=\"btn btn-light\">\r\n                                <i className=\"fab fa-black-tie text-primary\"></i>\r\n                                &nbsp;&nbsp;&nbsp;Add Experience\r\n                            </Link>\r\n                            <Link to=\"/add-education\" className=\"btn btn-light\">\r\n                                <i className=\"fas fa-graduation-cap text-primary\"></i>\r\n                                &nbsp;&nbsp;Add Education\r\n                            </Link>\r\n                        </div>\r\n\r\n                        <Experience profile={this.props.profile.profile} />\r\n\r\n                        <Education profile={this.props.profile.profile} />\r\n                    </section>\r\n                </Fragment>\r\n            );\r\n        } else {\r\n            return (\r\n                <section className=\"container\">\r\n                    <Alert />\r\n                    <h1 className=\"large text-primary\">Dashboard</h1>\r\n                    <p className=\"lead\">\r\n                        <i className=\"fas fa-user\"></i> Welcome {this.props.user.fname}{\" \"}\r\n                        {this.props.user.lname}\r\n                    </p>\r\n                    <p>You Haven't Setup Your Profile, Please Add Some Info About Yourself.</p>\r\n                    <Link to=\"/create-profile\" className=\"btn btn-primary my-1\">\r\n                        Create Profile\r\n                    </Link>\r\n                </section>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    user: state.authentication.user,\r\n    profile: state.profile,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Dashboard);\r\n","import { connect } from \"react-redux\";\r\nimport React, { Component, Fragment } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { createUserProfile } from \"../../actions/profile\";\r\nimport Alert from \"../layout/Alert\";\r\n\r\nclass CreateProfile extends Component {\r\n    state = {\r\n        profile: {\r\n            status: \"\",\r\n            location: \"\",\r\n            skills: \"\",\r\n            bio: \"\",\r\n            website: \"\",\r\n            twitter: \"\",\r\n            facebook: \"\",\r\n            youtube: \"\",\r\n            linkedin: \"\",\r\n            instagram: \"\",\r\n            github: \"\",\r\n        },\r\n        showSocialNetworkLinks: false,\r\n    };\r\n\r\n    toggle = () => {\r\n        this.setState({ showSocialNetworkLinks: !this.state.showSocialNetworkLinks });\r\n    };\r\n\r\n    onChangeHandler = (event) => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n        this.setState({ profile: { ...this.state.profile, [name]: value } });\r\n    };\r\n\r\n    onSubmitHandler = (event) => {\r\n        event.preventDefault();\r\n        const profile = this.state.profile;\r\n        this.props.createUserProfile(profile);\r\n    };\r\n\r\n    getSocialMediaLinks = () => {\r\n        if (this.state.showSocialNetworkLinks) {\r\n            return (\r\n                <Fragment>\r\n                    <div className=\"form-group social-input\">\r\n                        <i className=\"fab fa-twitter fa-2x\"></i>\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Twitter URL\"\r\n                            name=\"twitter\"\r\n                            value={this.state.profile.twitter}\r\n                            onChange={this.onChangeHandler}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"form-group social-input\">\r\n                        <i className=\"fab fa-facebook fa-2x\"></i>\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Facebook URL\"\r\n                            name=\"facebook\"\r\n                            value={this.state.profile.facebook}\r\n                            onChange={this.onChangeHandler}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"form-group social-input\">\r\n                        <i className=\"fab fa-youtube fa-2x\"></i>\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"YouTube URL\"\r\n                            name=\"youtube\"\r\n                            value={this.state.profile.youtube}\r\n                            onChange={this.onChangeHandler}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"form-group social-input\">\r\n                        <i className=\"fab fa-linkedin fa-2x\"></i>\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Linkedin URL\"\r\n                            name=\"linkedin\"\r\n                            value={this.state.profile.linkedin}\r\n                            onChange={this.onChangeHandler}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"form-group social-input\">\r\n                        <i className=\"fab fa-instagram fa-2x\"></i>\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Instagram URL\"\r\n                            name=\"instagram\"\r\n                            value={this.state.profile.instagram}\r\n                            onChange={this.onChangeHandler}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group social-input\">\r\n                        <i className=\"fab fa-github fa-2x\"></i>\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Github URL\"\r\n                            name=\"github\"\r\n                            value={this.state.profile.github}\r\n                            onChange={this.onChangeHandler}\r\n                        />\r\n                    </div>\r\n                </Fragment>\r\n            );\r\n        }\r\n    };\r\n\r\n    render() {\r\n        if (this.props.profile) {\r\n            return <Redirect to={this.props.path} />;\r\n        } else {\r\n            return (\r\n                <Fragment>\r\n                    <section className=\"container\">\r\n                        <Alert />\r\n                        <h1 className=\"large text-primary\">Create Your Profile</h1>\r\n                        <p className=\"lead\">\r\n                            <i className=\"fas fa-user\"></i> Let's Get Some Information To Make Your\r\n                            Profile Stand Out\r\n                        </p>\r\n                        <form className=\"form\" onSubmit={this.onSubmitHandler}>\r\n                            <div className=\"form-group\">\r\n                                <input\r\n                                    type=\"text\"\r\n                                    placeholder=\"Status\"\r\n                                    name=\"status\"\r\n                                    value={this.state.profile.status}\r\n                                    onChange={this.onChangeHandler}\r\n                                    required\r\n                                />\r\n                                <small className=\"form-text\">\r\n                                    Give Us An Idea Of Where You Are At In Your Career (Eg.\r\n                                    Developer At Google, Student At IIT Mumbai)\r\n                                </small>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <input\r\n                                    type=\"text\"\r\n                                    placeholder=\"Location\"\r\n                                    name=\"location\"\r\n                                    value={this.state.profile.location}\r\n                                    onChange={this.onChangeHandler}\r\n                                    required\r\n                                />\r\n                                <small className=\"form-text\">\r\n                                    City & State Suggested (Eg. Ahmedabad, Gujarat)\r\n                                </small>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <input\r\n                                    type=\"text\"\r\n                                    placeholder=\"Skills\"\r\n                                    name=\"skills\"\r\n                                    value={this.state.profile.skills}\r\n                                    onChange={this.onChangeHandler}\r\n                                    required\r\n                                />\r\n                                <small className=\"form-text\">\r\n                                    Please Use Comma Separated Values (Eg. Html, CSS, Java,\r\n                                    Javascript, Python)\r\n                                </small>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <input\r\n                                    type=\"text\"\r\n                                    placeholder=\"A Short Bio Of Yourself\"\r\n                                    name=\"bio\"\r\n                                    value={this.state.profile.bio}\r\n                                    onChange={this.onChangeHandler}\r\n                                    required\r\n                                />\r\n                                <small className=\"form-text\">Tell Us A Little About Yourself</small>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <input\r\n                                    type=\"text\"\r\n                                    placeholder=\"Website\"\r\n                                    name=\"website\"\r\n                                    value={this.state.profile.website}\r\n                                    onChange={this.onChangeHandler}\r\n                                />\r\n                                <small className=\"form-text\">\r\n                                    Could Be Your Own Or A Company Website (Optional)\r\n                                </small>\r\n                            </div>\r\n\r\n                            <div className=\"my-2\">\r\n                                <button\r\n                                    type=\"button\"\r\n                                    className=\"btn btn-light\"\r\n                                    onClick={this.toggle}\r\n                                >\r\n                                    Add Social Network Links\r\n                                </button>\r\n                                <span>(Optional)</span>\r\n                            </div>\r\n\r\n                            {this.getSocialMediaLinks()}\r\n\r\n                            <input type=\"submit\" className=\"btn btn-primary my-1\" />\r\n                        </form>\r\n                    </section>\r\n                </Fragment>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    profile: state.profile.profile,\r\n    path: state.path.path,\r\n});\r\n\r\nexport default connect(mapStateToProps, { createUserProfile })(CreateProfile);\r\n","import { connect } from \"react-redux\";\r\nimport React, { Component, Fragment } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { updateUserProfile } from \"../../actions/profile\";\r\nimport Alert from \"../layout/Alert\";\r\n\r\nclass EditProfile extends Component {\r\n    state = {\r\n        profile: {\r\n            status: this.props.profile.status,\r\n            location: this.props.profile.location,\r\n            skills: this.props.profile.skills.toString(),\r\n            bio: this.props.profile.bio,\r\n            website: this.props.profile.website,\r\n            twitter: this.props.profile.social ? this.props.profile.social.twitter : \"\",\r\n            facebook: this.props.profile.social ? this.props.profile.social.facebook : \"\",\r\n            youtube: this.props.profile.social ? this.props.profile.social.youtube : \"\",\r\n            linkedin: this.props.profile.social ? this.props.profile.social.linkedin : \"\",\r\n            instagram: this.props.profile.social ? this.props.profile.social.instagram : \"\",\r\n            github: this.props.profile.social ? this.props.profile.social.github : \"\",\r\n        },\r\n        showSocialNetworkLinks: false,\r\n        redirectToDashboard: false,\r\n    };\r\n\r\n    toggle = () => {\r\n        this.setState({ showSocialNetworkLinks: !this.state.showSocialNetworkLinks });\r\n    };\r\n\r\n    onChangeHandler = (event) => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n        this.setState({ profile: { ...this.state.profile, [name]: value } });\r\n    };\r\n\r\n    onSubmitHandler = (event) => {\r\n        event.preventDefault();\r\n        const profile = this.state.profile;\r\n        this.props.updateUserProfile(profile);\r\n        this.setState({ redirectToDashboard: true });\r\n    };\r\n\r\n    getSocialMediaLinks = () => {\r\n        if (this.state.showSocialNetworkLinks) {\r\n            return (\r\n                <Fragment>\r\n                    <div className=\"form-group social-input\">\r\n                        <i className=\"fab fa-twitter fa-2x\"></i>\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Twitter URL\"\r\n                            name=\"twitter\"\r\n                            value={this.state.profile.twitter}\r\n                            onChange={this.onChangeHandler}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group social-input\">\r\n                        <i className=\"fab fa-facebook fa-2x\"></i>\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Facebook URL\"\r\n                            name=\"facebook\"\r\n                            value={this.state.profile.facebook}\r\n                            onChange={this.onChangeHandler}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group social-input\">\r\n                        <i className=\"fab fa-youtube fa-2x\"></i>\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"YouTube URL\"\r\n                            name=\"youtube\"\r\n                            value={this.state.profile.youtube}\r\n                            onChange={this.onChangeHandler}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group social-input\">\r\n                        <i className=\"fab fa-linkedin fa-2x\"></i>\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Linkedin URL\"\r\n                            name=\"linkedin\"\r\n                            value={this.state.profile.linkedin}\r\n                            onChange={this.onChangeHandler}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group social-input\">\r\n                        <i className=\"fab fa-instagram fa-2x\"></i>\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Instagram URL\"\r\n                            name=\"instagram\"\r\n                            value={this.state.profile.instagram}\r\n                            onChange={this.onChangeHandler}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group social-input\">\r\n                        <i className=\"fab fa-github fa-2x\"></i>\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Github URL\"\r\n                            name=\"github\"\r\n                            value={this.state.profile.github}\r\n                            onChange={this.onChangeHandler}\r\n                        />\r\n                    </div>\r\n                </Fragment>\r\n            );\r\n        }\r\n    };\r\n\r\n    render() {\r\n        if (this.state.redirectToDashboard) {\r\n            return <Redirect to=\"/dashboard\" />;\r\n        } else {\r\n            return (\r\n                <Fragment>\r\n                    <section className=\"container\">\r\n                        <Alert />\r\n                        <h1 className=\"large text-primary\">Create Your Profile</h1>\r\n                        <p className=\"lead\">\r\n                            <i className=\"fas fa-user\"></i> Let's Get Some Information To Make Your\r\n                            Profile Stand Out\r\n                        </p>\r\n                        <form className=\"form\" onSubmit={this.onSubmitHandler}>\r\n                            <div className=\"form-group\">\r\n                                <input\r\n                                    type=\"text\"\r\n                                    placeholder=\"Status\"\r\n                                    name=\"status\"\r\n                                    value={this.state.profile.status}\r\n                                    onChange={this.onChangeHandler}\r\n                                    required\r\n                                />\r\n                                <small className=\"form-text\">\r\n                                    Give Us An Idea Of Where You Are At In Your Career (Eg.\r\n                                    Developer At Google, Student At IIT Mumbai)\r\n                                </small>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <input\r\n                                    type=\"text\"\r\n                                    placeholder=\"Location\"\r\n                                    name=\"location\"\r\n                                    value={this.state.profile.location}\r\n                                    onChange={this.onChangeHandler}\r\n                                    required\r\n                                />\r\n                                <small className=\"form-text\">\r\n                                    City & State Suggested (Eg. Ahmedabad, Gujarat)\r\n                                </small>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <input\r\n                                    type=\"text\"\r\n                                    placeholder=\"Skills\"\r\n                                    name=\"skills\"\r\n                                    value={this.state.profile.skills}\r\n                                    onChange={this.onChangeHandler}\r\n                                    required\r\n                                />\r\n                                <small className=\"form-text\">\r\n                                    Please Use Comma Separated Values (Eg. Html, CSS, Java,\r\n                                    Javascript, Python)\r\n                                </small>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <input\r\n                                    type=\"text\"\r\n                                    placeholder=\"A Short Bio Of Yourself\"\r\n                                    name=\"bio\"\r\n                                    value={this.state.profile.bio}\r\n                                    onChange={this.onChangeHandler}\r\n                                    required\r\n                                />\r\n                                <small className=\"form-text\">Tell Us A Little About Yourself</small>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <input\r\n                                    type=\"text\"\r\n                                    placeholder=\"Website\"\r\n                                    name=\"website\"\r\n                                    value={this.state.profile.website}\r\n                                    onChange={this.onChangeHandler}\r\n                                />\r\n                                <small className=\"form-text\">\r\n                                    Could Be Your Own Or A Company Website (Optional)\r\n                                </small>\r\n                            </div>\r\n\r\n                            <div className=\"my-2\">\r\n                                <button\r\n                                    type=\"button\"\r\n                                    className=\"btn btn-light\"\r\n                                    onClick={this.toggle}\r\n                                >\r\n                                    Add Social Network Links\r\n                                </button>\r\n                                <span>(Optional)</span>\r\n                            </div>\r\n\r\n                            {this.getSocialMediaLinks()}\r\n\r\n                            <input type=\"submit\" className=\"btn btn-primary my-1\" />\r\n                            <Link className=\"btn btn-light my-1\" to=\"/dashboard\">\r\n                                Go Back\r\n                            </Link>\r\n                        </form>\r\n                    </section>\r\n                </Fragment>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    profile: state.profile.profile,\r\n});\r\n\r\nexport default connect(mapStateToProps, { updateUserProfile })(EditProfile);\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { addExperience } from \"../../actions/profile\";\r\nimport { Redirect } from \"react-router\";\r\nimport Alert from \"../layout/Alert\";\r\n\r\nclass AddExperience extends Component {\r\n    state = {\r\n        title: \"\",\r\n        company: \"\",\r\n        location: \"\",\r\n        from: \"\",\r\n        to: \"\",\r\n        current: false,\r\n        description: \"\",\r\n        redirectToDashboard: false,\r\n    };\r\n\r\n    onChangeHandler = (event) => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n        this.setState({ [name]: value });\r\n    };\r\n\r\n    onChangeHandlerAtCheckBox = () => {\r\n        this.setState({ current: !this.state.current });\r\n    };\r\n\r\n    onSubmitHandler = (event) => {\r\n        event.preventDefault();\r\n        if (this.state.current) {\r\n            const { title, company, location, from, current, description } = this.state;\r\n            this.props.addExperience({ title, company, location, from, current, description });\r\n        } else {\r\n            const { title, company, location, from, to, current, description } = this.state;\r\n            this.props.addExperience({ title, company, location, from, to, current, description });\r\n        }\r\n        this.setState({ redirectToDashboard: true });\r\n    };\r\n\r\n    setDisabled = () => {\r\n        if (this.state.current) {\r\n            return \"disabled\";\r\n        } else {\r\n            return \"\";\r\n        }\r\n    };\r\n\r\n    render() {\r\n        if (this.state.redirectToDashboard) {\r\n            return <Redirect to=\"/dashboard\" />;\r\n        } else {\r\n            return (\r\n                <Fragment>\r\n                    <section className=\"container\">\r\n                        <Alert />\r\n                        <h1 className=\"large text-primary\">Add An Experience</h1>\r\n                        <p className=\"lead\">\r\n                            <i className=\"fas fa-code-branch\"></i> Add Any Developer / Programming\r\n                            Positions That You Have Had In The Past\r\n                        </p>\r\n                        <form className=\"form\" onSubmit={this.onSubmitHandler}>\r\n                            <div className=\"form-group\">\r\n                                <input\r\n                                    type=\"text\"\r\n                                    placeholder=\"Job Title\"\r\n                                    name=\"title\"\r\n                                    value={this.state.title}\r\n                                    onChange={this.onChangeHandler}\r\n                                    required\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <input\r\n                                    type=\"text\"\r\n                                    placeholder=\"Company\"\r\n                                    name=\"company\"\r\n                                    value={this.state.company}\r\n                                    onChange={this.onChangeHandler}\r\n                                    required\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <input\r\n                                    type=\"text\"\r\n                                    placeholder=\"Location\"\r\n                                    name=\"location\"\r\n                                    value={this.state.location}\r\n                                    onChange={this.onChangeHandler}\r\n                                    required\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <h4>From Date</h4>\r\n                                <input\r\n                                    type=\"date\"\r\n                                    name=\"from\"\r\n                                    value={this.state.from}\r\n                                    onChange={this.onChangeHandler}\r\n                                    required\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <p>\r\n                                    <input\r\n                                        type=\"checkbox\"\r\n                                        name=\"current\"\r\n                                        onChange={this.onChangeHandlerAtCheckBox}\r\n                                    />{\" \"}\r\n                                    Current Job\r\n                                </p>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <h4>To Date</h4>\r\n                                <input\r\n                                    type=\"date\"\r\n                                    name=\"to\"\r\n                                    value={this.state.to}\r\n                                    onChange={this.onChangeHandler}\r\n                                    disabled={this.setDisabled()}\r\n                                    required\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <textarea\r\n                                    name=\"description\"\r\n                                    cols=\"30\"\r\n                                    rows=\"5\"\r\n                                    placeholder=\"Job Description\"\r\n                                    value={this.state.description}\r\n                                    onChange={this.onChangeHandler}\r\n                                    required\r\n                                ></textarea>\r\n                            </div>\r\n                            <input type=\"submit\" className=\"btn btn-primary my-1\" />\r\n                            <a className=\"btn btn-light my-1\" href=\"dashboard.html\">\r\n                                Go Back\r\n                            </a>\r\n                        </form>\r\n                    </section>\r\n                </Fragment>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(null, { addExperience })(AddExperience);\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { addEducation } from \"../../actions/profile\";\r\nimport Alert from \"../layout/Alert\";\r\n\r\nclass AddEducation extends Component {\r\n    state = {\r\n        institute: \"\",\r\n        degree: \"\",\r\n        field: \"\",\r\n        from: \"\",\r\n        to: \"\",\r\n        current: false,\r\n        description: \"\",\r\n        redirectToDashboard: false,\r\n    };\r\n\r\n    onChangeHandler = (event) => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n        this.setState({ [name]: value });\r\n    };\r\n\r\n    onChangeHandlerAtCheckBox = () => {\r\n        this.setState({ current: !this.state.current });\r\n    };\r\n\r\n    setDisabled = () => {\r\n        if (this.state.current) {\r\n            return \"disabled\";\r\n        } else {\r\n            return \"\";\r\n        }\r\n    };\r\n\r\n    onSubmitHandler = (event) => {\r\n        event.preventDefault();\r\n        if (this.state.current) {\r\n            const { institute, degree, field, from, current, description } = this.state;\r\n            this.props.addEducation({ institute, degree, field, from, current, description });\r\n        } else {\r\n            const { institute, degree, field, from, to, current, description } = this.state;\r\n            this.props.addEducation({ institute, degree, field, from, to, current, description });\r\n        }\r\n        this.setState({ redirectToDashboard: true });\r\n    };\r\n\r\n    render() {\r\n        if (this.state.redirectToDashboard) {\r\n            return <Redirect to=\"/dashboard\" />;\r\n        } else {\r\n            return (\r\n                <Fragment>\r\n                    <section className=\"container\">\r\n                        <Alert />\r\n                        <h1 className=\"large text-primary\">Add Your Education</h1>\r\n                        <p className=\"lead\">\r\n                            <i className=\"fas fa-graduation-cap\"></i> Add Any School, Institute,\r\n                            University That You Have Attended\r\n                        </p>\r\n                        <form className=\"form\" onSubmit={this.onSubmitHandler}>\r\n                            <div className=\"form-group\">\r\n                                <input\r\n                                    type=\"text\"\r\n                                    placeholder=\"School, Institute Or University\"\r\n                                    name=\"institute\"\r\n                                    value={this.state.institute}\r\n                                    onChange={this.onChangeHandler}\r\n                                    required\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <input\r\n                                    type=\"text\"\r\n                                    placeholder=\"Degree or Certificate\"\r\n                                    name=\"degree\"\r\n                                    value={this.state.degree}\r\n                                    onChange={this.onChangeHandler}\r\n                                    required\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <input\r\n                                    type=\"text\"\r\n                                    placeholder=\"Field Of Study\"\r\n                                    name=\"field\"\r\n                                    value={this.state.field}\r\n                                    onChange={this.onChangeHandler}\r\n                                    required\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <h4>From Date</h4>\r\n                                <input\r\n                                    type=\"date\"\r\n                                    name=\"from\"\r\n                                    value={this.state.from}\r\n                                    onChange={this.onChangeHandler}\r\n                                    required\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <p>\r\n                                    <input\r\n                                        type=\"checkbox\"\r\n                                        name=\"current\"\r\n                                        onChange={this.onChangeHandlerAtCheckBox}\r\n                                    />{\" \"}\r\n                                    Current School Or Institute\r\n                                </p>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <h4>To Date</h4>\r\n                                <input\r\n                                    type=\"date\"\r\n                                    name=\"to\"\r\n                                    disabled={this.setDisabled()}\r\n                                    value={this.state.to}\r\n                                    onChange={this.onChangeHandler}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <textarea\r\n                                    name=\"description\"\r\n                                    cols=\"30\"\r\n                                    rows=\"5\"\r\n                                    placeholder=\"Program Description\"\r\n                                    value={this.state.description}\r\n                                    onChange={this.onChangeHandler}\r\n                                    required\r\n                                ></textarea>\r\n                            </div>\r\n                            <input type=\"submit\" className=\"btn btn-primary my-1\" />\r\n                            <a className=\"btn btn-light my-1\" href=\"dashboard.html\">\r\n                                Go Back\r\n                            </a>\r\n                        </form>\r\n                    </section>\r\n                </Fragment>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(null, { addEducation })(AddEducation);\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { setOtherProfile } from \"../../actions/profile\";\r\n\r\nclass UserProfiles extends Component {\r\n    getSkills = (profile) => {\r\n        return profile.skills.map((skill) => {\r\n            return (\r\n                <li className=\"text-primary\">\r\n                    <i className=\"fas fa-check\"></i> HTML\r\n                </li>\r\n            );\r\n        });\r\n    };\r\n\r\n    getProfiles = () => {\r\n        return this.props.profiles.map((profile) => {\r\n            return (\r\n                <div className=\"profile bg-light\" key={profile._id}>\r\n                    <img className=\"round-img\" src={profile.user.avatar} alt=\"\" />\r\n                    <div>\r\n                        <h2>\r\n                            {profile.user.fname} {profile.user.lname}\r\n                        </h2>\r\n                        <p>{profile.status}</p>\r\n                        <p>{profile.location}</p>\r\n                        <Link\r\n                            to=\"/profile\"\r\n                            className=\"btn btn-primary\"\r\n                            style={{ margin: \"10px auto\" }}\r\n                            onClick={() => this.props.setOtherProfile(profile)}\r\n                        >\r\n                            View Profile\r\n                        </Link>\r\n                    </div>\r\n                    <ul>\r\n                        {profile.skills.map((skill) => {\r\n                            return (\r\n                                <li className=\"text-primary\" key={uuidv4()}>\r\n                                    <i className=\"fas fa-check\"></i> {skill}\r\n                                </li>\r\n                            );\r\n                        })}\r\n                    </ul>\r\n                </div>\r\n            );\r\n        });\r\n    };\r\n\r\n    render() {\r\n        if (this.props.profiles.length > 0) {\r\n            return (\r\n                <Fragment>\r\n                    <div className=\"profiles\">{this.getProfiles()}</div>\r\n                </Fragment>\r\n            );\r\n        } else {\r\n            return <Fragment></Fragment>;\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(null, { setOtherProfile })(UserProfiles);\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Alert from \"../layout/Alert\";\r\nimport Loading from \"../layout/Loading\";\r\nimport UserProfiles from \"./UserProfiles\";\r\nimport { getUserProfiles } from \"../../actions/profile\";\r\n\r\nclass Nerds extends Component {\r\n    componentDidMount = () => {\r\n        this.props.getUserProfiles();\r\n        setTimeout(() => this.setState({ profiles: this.props.profiles }), 3000);\r\n    };\r\n\r\n    state = {\r\n        name: \"\",\r\n        timer: true,\r\n        profiles: this.props.profiles,\r\n    };\r\n\r\n    searchProfile = (name1, name2) => {\r\n        if (name2) {\r\n            const profiles1 = this.props.profiles.filter(\r\n                (profile) =>\r\n                    profile.user.fname.toLowerCase() === name1.toLowerCase() &&\r\n                    profile.user.lname.toLowerCase() === name2.toLowerCase()\r\n            );\r\n            const profiles2 = this.props.profiles.filter(\r\n                (profile) =>\r\n                    profile.user.fname.toLowerCase() === name2.toLowerCase() &&\r\n                    profile.user.lname === name1.toLowerCase()\r\n            );\r\n            const profiles = profiles1.concat(profiles2);\r\n            this.setState({ profiles: profiles });\r\n        } else {\r\n            const profiles1 = this.props.profiles.filter(\r\n                (profile) => profile.user.fname.toLowerCase() === name1.toLowerCase()\r\n            );\r\n            const profiles2 = this.props.profiles.filter(\r\n                (profile) => profile.user.lname.toLowerCase() === name1.toLowerCase()\r\n            );\r\n            const profiles = profiles1.concat(profiles2);\r\n            this.setState({ profiles: profiles });\r\n        }\r\n    };\r\n\r\n    onChangeHandler = (event) => {\r\n        const value = event.target.value;\r\n        this.setState({ name: value });\r\n    };\r\n\r\n    onSubmitHandler = (event) => {\r\n        event.preventDefault();\r\n        let names = this.state.name.split(\" \");\r\n        this.searchProfile(names[0], names[1]);\r\n    };\r\n\r\n    render() {\r\n        if (this.state.timer) {\r\n            setTimeout(() => this.setState({ timer: false }), 2000);\r\n            return (\r\n                <Fragment>\r\n                    <Loading />\r\n                </Fragment>\r\n            );\r\n        } else {\r\n            if (this.props.profile) {\r\n                return (\r\n                    <Fragment>\r\n                        <section className=\"container\">\r\n                            <form className=\"search\" onSubmit={this.onSubmitHandler}>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"search-term\"\r\n                                    name=\"name\"\r\n                                    placeholder=\"Whom Are You Looking For?\"\r\n                                    value={this.state.name}\r\n                                    onChange={this.onChangeHandler}\r\n                                />\r\n                                <button type=\"submit\" className=\"search-button\">\r\n                                    <i className=\"fa fa-search\"></i>\r\n                                </button>\r\n                            </form>\r\n                            <Alert />\r\n                            <h1 className=\"large text-primary\">Nerds</h1>\r\n                            <p className=\"lead\">\r\n                                <i className=\"fas fa-users fa-lg\"></i> Browse And Connect With Other\r\n                                Nerds\r\n                            </p>\r\n                            <UserProfiles profiles={this.state.profiles} />\r\n                        </section>\r\n                    </Fragment>\r\n                );\r\n            } else {\r\n                return <Redirect to=\"/create-profile\" />;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    profiles: state.profile.profiles,\r\n    profile: state.profile.profile,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getUserProfiles })(Nerds);\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { changeAvatar } from \"../../actions/authentication\";\r\nimport spinner from \"../../img/loading.gif\";\r\n\r\nclass ProfileTop extends Component {\r\n    state = {\r\n        loading: false,\r\n    };\r\n\r\n    uploadImage = (event) => {\r\n        const file = event.target.files[0];\r\n        const formData = new FormData();\r\n        formData.append(\"file\", file, file.name);\r\n        this.props.changeAvatar(formData);\r\n        this.setState({ loading: true });\r\n        setTimeout(() => {\r\n            this.setState({ loading: false });\r\n            window.location.reload();\r\n        }, 6000);\r\n    };\r\n\r\n    getBackground = () => {\r\n        if (this.state.loading) {\r\n            return `url(${spinner})`;\r\n        } else {\r\n            return `url(${this.props.profile.user.avatar})`;\r\n        }\r\n    };\r\n\r\n    getSocialLinks = () => {\r\n        if (this.props.profile.social) {\r\n            return (\r\n                <Fragment>\r\n                    {this.props.profile.social.youtube ? (\r\n                        <a\r\n                            href={`https://${this.props.profile.social.youtube}`}\r\n                            target=\"_blank\"\r\n                            rel=\"noopener noreferrer\"\r\n                        >\r\n                            <i className=\"fab fa-youtube fa-2x\"></i>\r\n                        </a>\r\n                    ) : (\r\n                        <Fragment></Fragment>\r\n                    )}\r\n\r\n                    {this.props.profile.social.twitter ? (\r\n                        <a\r\n                            href={`https://${this.props.profile.social.twitter}`}\r\n                            target=\"_blank\"\r\n                            rel=\"noopener noreferrer\"\r\n                        >\r\n                            <i className=\"fab fa-twitter fa-2x\"></i>\r\n                        </a>\r\n                    ) : (\r\n                        <Fragment></Fragment>\r\n                    )}\r\n\r\n                    {this.props.profile.social.facebook ? (\r\n                        <a\r\n                            href={`https://${this.props.profile.social.facebook}`}\r\n                            target=\"_blank\"\r\n                            rel=\"noopener noreferrer\"\r\n                        >\r\n                            <i className=\"fab fa-facebook fa-2x\"></i>\r\n                        </a>\r\n                    ) : (\r\n                        <Fragment></Fragment>\r\n                    )}\r\n\r\n                    {this.props.profile.social.linkedin ? (\r\n                        <a\r\n                            href={`https://${this.props.profile.social.linkedin}`}\r\n                            target=\"_blank\"\r\n                            rel=\"noopener noreferrer\"\r\n                        >\r\n                            <i className=\"fab fa-linkedin fa-2x\"></i>\r\n                        </a>\r\n                    ) : (\r\n                        <Fragment></Fragment>\r\n                    )}\r\n\r\n                    {this.props.profile.social.instagram ? (\r\n                        <a\r\n                            href={`https://${this.props.profile.social.instagram}`}\r\n                            target=\"_blank\"\r\n                            rel=\"noopener noreferrer\"\r\n                        >\r\n                            <i className=\"fab fa-instagram fa-2x\"></i>\r\n                        </a>\r\n                    ) : (\r\n                        <Fragment></Fragment>\r\n                    )}\r\n\r\n                    {this.props.profile.social.github ? (\r\n                        <a\r\n                            href={`https://${this.props.profile.social.github}`}\r\n                            target=\"_blank\"\r\n                            rel=\"noopener noreferrer\"\r\n                        >\r\n                            <i className=\"fab fa-github fa-2x\"></i>\r\n                        </a>\r\n                    ) : (\r\n                        <Fragment></Fragment>\r\n                    )}\r\n                </Fragment>\r\n            );\r\n        } else {\r\n            return <Fragment></Fragment>;\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <div className=\"profile-top bg-primary p-2\">\r\n                    <div className=\"avatar-upload\">\r\n                        <div className=\"avatar-edit\">\r\n                            <form>\r\n                                <input\r\n                                    type=\"file\"\r\n                                    id=\"imageUpload\"\r\n                                    name=\"file\"\r\n                                    accept=\".jpg, .jpeg\"\r\n                                    onChange={this.uploadImage}\r\n                                />\r\n                                <label htmlFor=\"imageUpload\"></label>\r\n                            </form>\r\n                        </div>\r\n                        <div className=\"avatar-preview\">\r\n                            <div\r\n                                id=\"imagePreview\"\r\n                                style={{\r\n                                    backgroundImage: this.getBackground(),\r\n                                }}\r\n                            ></div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <h1 className=\"large\">\r\n                        {this.props.profile.user.fname + \" \" + this.props.profile.user.lname}\r\n                    </h1>\r\n                    <p className=\"lead\">{this.props.profile.status}</p>\r\n                    <p>{this.props.profile.location}</p>\r\n                    <div className=\"icons my-1\">\r\n                        {this.getSocialLinks()}\r\n                        {this.props.profile.website ? (\r\n                            <a\r\n                                href={`https://${this.props.profile.website}`}\r\n                                target=\"_blank\"\r\n                                rel=\"noopener noreferrer\"\r\n                            >\r\n                                <i className=\"fas fa-globe fa-2x\"></i>\r\n                            </a>\r\n                        ) : (\r\n                            <Fragment></Fragment>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(null, { changeAvatar })(ProfileTop);\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass ProfileAbout extends Component {\r\n    getButtons = () => {\r\n        if (this.props.myProfile) {\r\n            return (\r\n                <Fragment>\r\n                    <div className=\"line\"></div>\r\n                    <Link to=\"/dashboard\" className=\"btn btn-primary btn-profile\">\r\n                        Edit Profile\r\n                    </Link>\r\n                    <Link\r\n                        to={`/reset-password/${this.props.token}`}\r\n                        className=\"btn btn-primary btn-profile\"\r\n                    >\r\n                        Change Password\r\n                    </Link>\r\n                </Fragment>\r\n            );\r\n        } else {\r\n            return <Fragment></Fragment>;\r\n        }\r\n    };\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <div className=\"profile-about bg-light p-2\">\r\n                    <h2 className=\"text-primary\">{this.props.profile.user.fname}'s Bio</h2>\r\n                    <p>{this.props.profile.bio}</p>\r\n                    <div className=\"line\"></div>\r\n                    <h2 className=\"text-primary\">Skill Set</h2>\r\n                    <div className=\"skills\">\r\n                        {this.props.profile.skills.map((skill) => {\r\n                            return (\r\n                                <div className=\"p-1\" key={uuidv4()}>\r\n                                    <i className=\"fa fa-check\"></i> {skill}\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                    {this.getButtons()}\r\n                </div>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ProfileAbout;\r\n","import React, { Component, Fragment } from \"react\";\r\nimport Moment from \"react-moment\";\r\n\r\nclass ProfileExperience extends Component {\r\n    getDate = (exp) => {\r\n        return (\r\n            <Fragment>\r\n                <Moment format=\"DD/MM/YYYY\">{exp.from}</Moment>\r\n                {\" - \"}\r\n                {exp.current ? \"Till Now\" : <Moment format=\"DD/MM/YYYY\">{exp.to}</Moment>}\r\n            </Fragment>\r\n        );\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <div className=\"profile-exp bg-white p-2\">\r\n                    <h2 className=\"text-primary\">Experience</h2>\r\n\r\n                    {this.props.profile.experience.map((exp) => {\r\n                        return (\r\n                            <div key={exp._id}>\r\n                                <h3 className=\"text-dark\">{exp.company}</h3>\r\n                                <p>{this.getDate(exp)}</p>\r\n                                <p>\r\n                                    <strong>Position: </strong>\r\n                                    {exp.title}\r\n                                </p>\r\n                                <p>\r\n                                    <strong>Location: </strong>\r\n                                    {exp.location}\r\n                                </p>\r\n                                <p>\r\n                                    <strong>Description: </strong>\r\n                                    {exp.description}\r\n                                </p>\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </div>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\nexport default ProfileExperience;\r\n","import React, { Component, Fragment } from \"react\";\r\nimport Moment from \"react-moment\";\r\n\r\nclass ProfileEducation extends Component {\r\n    getDate = (edu) => {\r\n        return (\r\n            <Fragment>\r\n                <Moment format=\"DD/MM/YYYY\">{edu.from}</Moment>\r\n                {\" - \"}\r\n                {edu.current ? \"Till Now\" : <Moment format=\"DD/MM/YYYY\">{edu.to}</Moment>}\r\n            </Fragment>\r\n        );\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <div className=\"profile-edu bg-white p-2\">\r\n                    <h2 className=\"text-primary\">Education</h2>\r\n                    {this.props.profile.education.map((edu) => {\r\n                        return (\r\n                            <div key={edu._id}>\r\n                                <h3>{edu.institute}</h3>\r\n                                <p>{this.getDate(edu)}</p>\r\n                                <p>\r\n                                    <strong>Degree: </strong>\r\n                                    {edu.degree}\r\n                                </p>\r\n                                <p>\r\n                                    <strong>Field Of Study: </strong>\r\n                                    {edu.field}\r\n                                </p>\r\n                                <p>\r\n                                    <strong>Description: </strong>\r\n                                    {edu.description}\r\n                                </p>\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </div>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\nexport default ProfileEducation;\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport ProfileTop from \"./ProfileTop\";\r\nimport ProfileAbout from \"./ProfileAbout\";\r\nimport ProfileExperience from \"./ProfileExperience\";\r\nimport ProfileEducation from \"./ProfileEducation\";\r\nimport Loading from \"../layout/Loading\";\r\nimport Alert from \"../layout/Alert\";\r\nimport { Redirect } from \"react-router\";\r\n\r\nclass MyProfile extends Component {\r\n    state = {\r\n        timer: true,\r\n    };\r\n    render() {\r\n        if (this.state.timer) {\r\n            setTimeout(() => this.setState({ timer: false }), 2000);\r\n            return (\r\n                <Fragment>\r\n                    <Loading />\r\n                </Fragment>\r\n            );\r\n        } else {\r\n            if (this.props.profile) {\r\n                return (\r\n                    <Fragment>\r\n                        <section className=\"container\">\r\n                            <Alert />\r\n                            <div className=\"profile-grid my-1\">\r\n                                <ProfileTop profile={this.props.profile} />\r\n\r\n                                <ProfileAbout\r\n                                    profile={this.props.profile}\r\n                                    token={this.props.token}\r\n                                    myProfile={true}\r\n                                />\r\n\r\n                                <ProfileExperience profile={this.props.profile} />\r\n\r\n                                <ProfileEducation profile={this.props.profile} />\r\n                            </div>\r\n                        </section>\r\n                    </Fragment>\r\n                );\r\n            } else {\r\n                return <Redirect to=\"/create-profile\" />;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    profile: state.profile.profile,\r\n    token: state.authentication.token,\r\n});\r\n\r\nexport default connect(mapStateToProps)(MyProfile);\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass ProfileTopOther extends Component {\r\n    state = {\r\n        loading: false,\r\n    };\r\n\r\n    getSocialLinks = () => {\r\n        if (this.props.profile.social) {\r\n            return (\r\n                <Fragment>\r\n                    {this.props.profile.social.youtube ? (\r\n                        <a\r\n                            href={`https://${this.props.profile.social.youtube}`}\r\n                            target=\"_blank\"\r\n                            rel=\"noopener noreferrer\"\r\n                        >\r\n                            <i className=\"fab fa-youtube fa-2x\"></i>\r\n                        </a>\r\n                    ) : (\r\n                        <Fragment></Fragment>\r\n                    )}\r\n\r\n                    {this.props.profile.social.twitter ? (\r\n                        <a\r\n                            href={`https://${this.props.profile.social.twitter}`}\r\n                            target=\"_blank\"\r\n                            rel=\"noopener noreferrer\"\r\n                        >\r\n                            <i className=\"fab fa-twitter fa-2x\"></i>\r\n                        </a>\r\n                    ) : (\r\n                        <Fragment></Fragment>\r\n                    )}\r\n\r\n                    {this.props.profile.social.facebook ? (\r\n                        <a\r\n                            href={`https://${this.props.profile.social.facebook}`}\r\n                            target=\"_blank\"\r\n                            rel=\"noopener noreferrer\"\r\n                        >\r\n                            <i className=\"fab fa-facebook fa-2x\"></i>\r\n                        </a>\r\n                    ) : (\r\n                        <Fragment></Fragment>\r\n                    )}\r\n\r\n                    {this.props.profile.social.linkedin ? (\r\n                        <a\r\n                            href={`https://${this.props.profile.social.linkedin}`}\r\n                            target=\"_blank\"\r\n                            rel=\"noopener noreferrer\"\r\n                        >\r\n                            <i className=\"fab fa-linkedin fa-2x\"></i>\r\n                        </a>\r\n                    ) : (\r\n                        <Fragment></Fragment>\r\n                    )}\r\n\r\n                    {this.props.profile.social.instagram ? (\r\n                        <a\r\n                            href={`https://${this.props.profile.social.instagram}`}\r\n                            target=\"_blank\"\r\n                            rel=\"noopener noreferrer\"\r\n                        >\r\n                            <i className=\"fab fa-instagram fa-2x\"></i>\r\n                        </a>\r\n                    ) : (\r\n                        <Fragment></Fragment>\r\n                    )}\r\n\r\n                    {this.props.profile.social.github ? (\r\n                        <a\r\n                            href={`https://${this.props.profile.social.github}`}\r\n                            target=\"_blank\"\r\n                            rel=\"noopener noreferrer\"\r\n                        >\r\n                            <i className=\"fab fa-github fa-2x\"></i>\r\n                        </a>\r\n                    ) : (\r\n                        <Fragment></Fragment>\r\n                    )}\r\n                </Fragment>\r\n            );\r\n        } else {\r\n            return <Fragment></Fragment>;\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <div className=\"profile-top bg-primary p-2\">\r\n                    <div className=\"avatar-upload\">\r\n                        <div className=\"avatar-preview\">\r\n                            <div\r\n                                id=\"imagePreview\"\r\n                                style={{\r\n                                    backgroundImage: `url(${this.props.profile.user.avatar})`,\r\n                                }}\r\n                            ></div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <h1 className=\"large\">\r\n                        {this.props.profile.user.fname + \" \" + this.props.profile.user.lname}\r\n                    </h1>\r\n                    <p className=\"lead\">{this.props.profile.status}</p>\r\n                    <p>{this.props.profile.location}</p>\r\n                    <div className=\"icons my-1\">\r\n                        {this.getSocialLinks()}\r\n                        {this.props.profile.website ? (\r\n                            <a\r\n                                href={`https://${this.props.profile.website}`}\r\n                                target=\"_blank\"\r\n                                rel=\"noopener noreferrer\"\r\n                            >\r\n                                <i className=\"fas fa-globe fa-2x\"></i>\r\n                            </a>\r\n                        ) : (\r\n                            <Fragment></Fragment>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(null)(ProfileTopOther);\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport ProfileTopOther from \"./ProfileTopOther\";\r\nimport ProfileAbout from \"./ProfileAbout\";\r\nimport ProfileExperience from \"./ProfileExperience\";\r\nimport ProfileEducation from \"./ProfileEducation\";\r\nimport Alert from \"../layout/Alert\";\r\nimport Loading from \"../layout/Loading\";\r\n\r\nclass OtherProfile extends Component {\r\n    render() {\r\n        if (this.props.profile) {\r\n            return (\r\n                <Fragment>\r\n                    <section className=\"container\">\r\n                        <Alert />\r\n                        <div className=\"profile-grid my-1\">\r\n                            <ProfileTopOther profile={this.props.profile} />\r\n\r\n                            <ProfileAbout profile={this.props.profile} myProfile={false} />\r\n\r\n                            <ProfileExperience profile={this.props.profile} />\r\n\r\n                            <ProfileEducation profile={this.props.profile} />\r\n                        </div>\r\n                    </section>\r\n                </Fragment>\r\n            );\r\n        } else {\r\n            return (\r\n                <Fragment>\r\n                    <Loading />\r\n                </Fragment>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    profile: state.profile.otherProfile,\r\n});\r\n\r\nexport default connect(mapStateToProps)(OtherProfile);\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Moment from \"react-moment\";\r\nimport { submitUserComment, deleteComment } from \"../../actions/post\";\r\nimport { fetchOtherProfile } from \"../../actions/profile\";\r\nimport Alert from \"../layout/Alert\";\r\n\r\nclass Post extends Component {\r\n    state = {\r\n        text: \"\",\r\n    };\r\n\r\n    getDate = (date) => {\r\n        return (\r\n            <Fragment>\r\n                <Moment format=\"DD/MM/YYYY\">{date}</Moment>\r\n            </Fragment>\r\n        );\r\n    };\r\n\r\n    getButton = (userId, commentId) => {\r\n        if (userId === this.props.id) {\r\n            return (\r\n                <Fragment>\r\n                    <button\r\n                        onClick={() =>\r\n                            this.props.deleteComment(this.props.singlePost._id, commentId)\r\n                        }\r\n                        type=\"button\"\r\n                        className=\"btn btn-danger \"\r\n                        style={{\r\n                            marginRight: \"0px\",\r\n                            float: \"right\",\r\n                            display: \"block\",\r\n                        }}\r\n                    >\r\n                        <i className=\"fas fa-times\"></i>\r\n                    </button>\r\n                </Fragment>\r\n            );\r\n        } else {\r\n            <Fragment></Fragment>;\r\n        }\r\n    };\r\n\r\n    onChangeHandler = (event) => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n        this.setState({ [name]: value });\r\n    };\r\n\r\n    onSubmitHandler = (event) => {\r\n        event.preventDefault();\r\n        this.props.submitUserComment(this.state.text, this.props.singlePost._id);\r\n        this.setState({ text: \"\" });\r\n    };\r\n\r\n    onProfileClickHandler = (id) => {\r\n        this.props.fetchOtherProfile(id);\r\n    };\r\n\r\n    refreshPage = () => {\r\n        this.setState({ userPosts: this.props.userPosts });\r\n    };\r\n\r\n    getComments = () => {\r\n        return this.props.singlePost.comments.map((comment) => {\r\n            return (\r\n                <Fragment key={comment._id}>\r\n                    <div className=\"post bg-white p-1 my-1\">\r\n                        <div>\r\n                            <Link\r\n                                to=\"/profile\"\r\n                                onClick={() => this.onProfileClickHandler(comment.user._id)}\r\n                            >\r\n                                <img\r\n                                    className=\"round-img\"\r\n                                    src={comment.user.avatar}\r\n                                    alt={`${comment.user.fname} ${comment.user.lname}`}\r\n                                />\r\n                                <h4>\r\n                                    {comment.user.fname} {comment.user.lname}\r\n                                </h4>\r\n                            </Link>\r\n                        </div>\r\n                        <div>\r\n                            <p className=\"my-1 post-text\">{comment.text}</p>\r\n                            <p className=\"post-date\">Posted On : {this.getDate(comment.date)}</p>\r\n                            <div className=\"clear\" style={{ clear: \"both\" }}></div>\r\n                            {this.getButton(comment.user._id, comment._id)}\r\n\r\n                            <div className=\"clear\" style={{ clear: \"both\" }}></div>\r\n                        </div>\r\n                    </div>\r\n                </Fragment>\r\n            );\r\n        });\r\n    };\r\n\r\n    render() {\r\n        setInterval(this.refreshPage, 300);\r\n        return (\r\n            <Fragment>\r\n                <section className=\"container\">\r\n                    <Alert />\r\n                    <div className=\"post bg-light p-1 my-1\">\r\n                        <div>\r\n                            <Link\r\n                                to=\"/profile\"\r\n                                onClick={() =>\r\n                                    this.onProfileClickHandler(this.props.singlePost.user._id)\r\n                                }\r\n                            >\r\n                                <img\r\n                                    className=\"round-img\"\r\n                                    src={this.props.singlePost.user.avatar}\r\n                                    alt={`${this.props.singlePost.user.fname} ${this.props.singlePost.user.lname}`}\r\n                                />\r\n                                <h4>\r\n                                    {this.props.singlePost.user.fname}{\" \"}\r\n                                    {this.props.singlePost.user.lname}\r\n                                </h4>\r\n                            </Link>\r\n                        </div>\r\n                        <div>\r\n                            <p\r\n                                className=\"py-1 post-text\"\r\n                                style={{\r\n                                    textAlign: \"justify\",\r\n                                    fontSize: \"1.2rem\",\r\n                                    marginBottom: \"1rem\",\r\n                                }}\r\n                            >\r\n                                {this.props.singlePost.text}\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"post-form\">\r\n                        <div className=\"bg-primary p\">\r\n                            <h3>Leave A Comment</h3>\r\n                        </div>\r\n                        <form className=\"form my-1\" onSubmit={this.onSubmitHandler}>\r\n                            <textarea\r\n                                name=\"text\"\r\n                                cols=\"30\"\r\n                                rows=\"5\"\r\n                                placeholder=\"Comment On This Post\"\r\n                                value={this.state.text}\r\n                                onChange={this.onChangeHandler}\r\n                                required\r\n                            ></textarea>\r\n                            <input type=\"submit\" className=\"btn btn-dark my-1\" value=\"Submit\" />\r\n                        </form>\r\n                    </div>\r\n\r\n                    <div className=\"comments\">{this.getComments()}</div>\r\n                </section>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    singlePost: state.post.singlePost,\r\n    id: state.authentication.user._id,\r\n});\r\n\r\nexport default connect(mapStateToProps, { submitUserComment, fetchOtherProfile, deleteComment })(\r\n    Post\r\n);\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Redirect } from \"react-router\";\r\nimport Moment from \"react-moment\";\r\nimport Loading from \"../layout/Loading\";\r\nimport {\r\n    submitUserPost,\r\n    likeButtonClicked,\r\n    setPostData,\r\n    deletePost,\r\n    setPostUser,\r\n    getUserPosts,\r\n} from \"../../actions/post\";\r\nimport Alert from \"../layout/Alert\";\r\n\r\nclass MyPosts extends Component {\r\n    state = {\r\n        text: \"\",\r\n        userPosts: this.props.userPosts,\r\n        timer: true,\r\n    };\r\n\r\n    componentDidMount = () => {\r\n        this.props.getUserPosts();\r\n        setTimeout(() => this.setState({ userPosts: this.props.userPosts }), 3000);\r\n    };\r\n\r\n    getDate = (date) => {\r\n        return (\r\n            <Fragment>\r\n                <Moment format=\"DD/MM/YYYY\">{date}</Moment>\r\n            </Fragment>\r\n        );\r\n    };\r\n\r\n    getLikesClassName = (userPost) => {\r\n        if (userPost.likes.some((like) => like.user === this.props.id)) {\r\n            return \"fas fa-thumbs-up fa-lg liked\";\r\n        } else {\r\n            return \"fas fa-thumbs-up fa-lg\";\r\n        }\r\n    };\r\n\r\n    onChangeHandler = (event) => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n        this.setState({ [name]: value });\r\n    };\r\n\r\n    onSubmitHandler = (event) => {\r\n        event.preventDefault();\r\n        this.props.submitUserPosts(this.state.text);\r\n        this.setState({ text: \"\" });\r\n    };\r\n\r\n    refreshPage = () => {\r\n        this.setState({ userPosts: this.props.userPosts });\r\n    };\r\n\r\n    getPosts = () => {\r\n        return this.state.userPosts.map((userPost) => {\r\n            return (\r\n                <Fragment key={userPost._id}>\r\n                    <div className=\"post bg-light p-1 my-1\">\r\n                        <div>\r\n                            <Link to=\"/my-profile\">\r\n                                <img\r\n                                    className=\"round-img\"\r\n                                    src={userPost.user.avatar}\r\n                                    alt={`${userPost.user.fname} ${userPost.user.lname}`}\r\n                                />\r\n                                <h4>\r\n                                    {userPost.user.fname} {userPost.user.lname}\r\n                                </h4>\r\n                            </Link>\r\n                        </div>\r\n                        <div>\r\n                            <p\r\n                                className=\"py-1 post-text\"\r\n                                style={{\r\n                                    textAlign: \"justify\",\r\n                                    fontSize: \"1.2rem\",\r\n                                    marginBottom: \"1rem\",\r\n                                }}\r\n                            >\r\n                                {userPost.text}\r\n                            </p>\r\n\r\n                            <button\r\n                                type=\"button\"\r\n                                className=\"btn btn-primary my-1\"\r\n                                onClick={() => this.props.likeButtonClicked(userPost._id, true)}\r\n                            >\r\n                                <i className={this.getLikesClassName(userPost)}></i>{\" \"}\r\n                                <span className=\"count\">{userPost.likes.length}</span>\r\n                            </button>\r\n\r\n                            <Link\r\n                                to=\"/post\"\r\n                                className=\"btn btn-primary my-1\"\r\n                                onClick={() => {\r\n                                    this.props.setPostUser(true);\r\n                                    this.props.setPostData(userPost);\r\n                                }}\r\n                            >\r\n                                Discussion <i className=\"far fa-comment fa-lg\"></i>&nbsp;&nbsp;\r\n                                <span className=\"count\">{userPost.comments.length}</span>\r\n                            </Link>\r\n                            <button\r\n                                type=\"button\"\r\n                                className=\"btn btn-danger\"\r\n                                onClick={() => this.props.deletePost(userPost._id)}\r\n                            >\r\n                                <i className=\"fas fa-times\"></i>\r\n                            </button>\r\n                            <p className=\"post-date\">Posted On : {this.getDate(userPost.date)}</p>\r\n                        </div>\r\n                    </div>\r\n                </Fragment>\r\n            );\r\n        });\r\n    };\r\n\r\n    render() {\r\n        setInterval(this.refreshPage, 300);\r\n        if (this.state.timer) {\r\n            setTimeout(() => this.setState({ timer: false }), 2000);\r\n            return (\r\n                <Fragment>\r\n                    <Loading />\r\n                </Fragment>\r\n            );\r\n        } else {\r\n            if (this.props.profile) {\r\n                return (\r\n                    <Fragment>\r\n                        <section className=\"container\">\r\n                            <Alert />\r\n                            <h1 className=\"large text-primary\">Posts</h1>\r\n                            <p className=\"lead\">\r\n                                <i className=\"far fa-address-card fa-lg\"></i> Welcome To The\r\n                                Community!\r\n                            </p>\r\n\r\n                            <div className=\"post-form\">\r\n                                <div className=\"bg-primary p\">\r\n                                    <h3>Say Something...</h3>\r\n                                </div>\r\n                                <form className=\"form my-1\" onSubmit={this.onSubmitHandler}>\r\n                                    <textarea\r\n                                        name=\"text\"\r\n                                        cols=\"30\"\r\n                                        rows=\"5\"\r\n                                        placeholder=\"Create A Post\"\r\n                                        value={this.state.text}\r\n                                        onChange={this.onChangeHandler}\r\n                                        required\r\n                                    ></textarea>\r\n                                    <button type=\"submit\" className=\"btn btn-primary my-1\">\r\n                                        Post &nbsp;<i className=\"fas fa-paper-plane\"></i>\r\n                                    </button>\r\n                                </form>\r\n                            </div>\r\n\r\n                            <div className=\"posts\">{this.getPosts()}</div>\r\n                        </section>\r\n                    </Fragment>\r\n                );\r\n            } else {\r\n                return <Redirect to=\"/create-profile\" />;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    id: state.authentication.user._id,\r\n    userPosts: state.post.userPosts,\r\n    profile: state.profile.profile,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n    submitUserPosts: submitUserPost,\r\n    likeButtonClicked,\r\n    setPostData,\r\n    deletePost,\r\n    setPostUser,\r\n    getUserPosts,\r\n})(MyPosts);\r\n","import React, { Component } from \"react\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { setURLPath } from \"../actions/path\";\r\n\r\nclass PrivateRoute extends Component {\r\n    render() {\r\n        if (this.props.authentication.isAuthenticated) {\r\n            return <Route exact path={this.props.path} component={this.props.component} />;\r\n        } else {\r\n            if (\r\n                this.props.path === \"/my-profile\" ||\r\n                this.props.path === \"/nerds\" ||\r\n                this.props.path === \"/my-posts\"\r\n            ) {\r\n                this.props.setURLPath(this.props.path);\r\n            } else {\r\n                this.props.setURLPath(\"/\");\r\n            }\r\n            return <Redirect to=\"/sign-in\" />;\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    authentication: state.authentication,\r\n});\r\n\r\nexport default connect(mapStateToProps, { setURLPath })(PrivateRoute);\r\n","import * as ActionTypes from \"./types\";\r\n\r\nexport const setURLPath = (path) => (dispatch) => {\r\n    dispatch({\r\n        type: ActionTypes.SET_URL_PATH,\r\n        payload: path,\r\n    });\r\n};\r\n","import React, { Component, Fragment } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport \"./App.css\";\nimport SignIn from \"./components/authentication/SignIn\";\nimport SignUp from \"./components/authentication/SignUp\";\nimport ForgotPassword from \"./components/authentication/ForgotPassword\";\nimport ResetPassword from \"./components/authentication/ResetPassword\";\nimport Landing from \"./components/layout/Landing\";\nimport Navbar from \"./components/layout/Navbar\";\nimport Dashboard from \"./components/dashboard/Dashboard\";\nimport CreateProfile from \"./components/dashboard/CreateProfile\";\nimport EditProfile from \"./components/dashboard/EditProfile\";\nimport AddExperience from \"./components/dashboard/AddExperience\";\nimport AddEducation from \"./components/dashboard/AddEducation\";\nimport Nerds from \"./components/profile/Nerds\";\nimport MyProfile from \"./components/profile/MyProfile\";\nimport OtherProfile from \"./components/profile/OtherProfile\";\nimport Post from \"./components/posts/Post\";\nimport MyPosts from \"./components/posts/MyPosts\";\nimport store from \"./store\";\nimport PrivateRoute from \"./routes/PrivateRoute\";\nimport { authenticateUser } from \"./actions/authentication\";\n\nclass App extends Component {\n    constructor() {\n        super();\n        const state = store.getState();\n        if (state.authentication.token) {\n            store.dispatch(authenticateUser());\n        }\n    }\n\n    disableContextMenu = (event) => {\n        event.preventDefault();\n    };\n\n    render() {\n        return (\n            <Fragment>\n                <div onContextMenu={this.disableContextMenu}>\n                    <Provider store={store}>\n                        <Router>\n                            <Navbar />\n                            <Route exact path=\"/\" component={Landing} />\n                            <Switch>\n                                <Route exact path=\"/sign-in\" component={SignIn} />\n                                <Route exact path=\"/sign-up\" component={SignUp} />\n                                <Route exact path=\"/forgot-password\" component={ForgotPassword} />\n                                <Route\n                                    exact\n                                    path=\"/reset-password/:token\"\n                                    component={ResetPassword}\n                                />\n                                <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\n                                <PrivateRoute\n                                    exact\n                                    path=\"/create-profile\"\n                                    component={CreateProfile}\n                                />\n                                <PrivateRoute exact path=\"/edit-profile\" component={EditProfile} />\n                                <PrivateRoute\n                                    exact\n                                    path=\"/add-experience\"\n                                    component={AddExperience}\n                                />\n                                <PrivateRoute\n                                    exact\n                                    path=\"/add-education\"\n                                    component={AddEducation}\n                                />\n                                <PrivateRoute exact path=\"/my-profile\" component={MyProfile} />\n                                <PrivateRoute exact path=\"/profile\" component={OtherProfile} />\n                                <PrivateRoute exact path=\"/nerds\" component={Nerds} />\n                                <PrivateRoute exact path=\"/my-posts\" component={MyPosts} />\n                                <PrivateRoute exact path=\"/post\" component={Post} />\n                            </Switch>\n                        </Router>\n                    </Provider>\n                </div>\n            </Fragment>\n        );\n    }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}